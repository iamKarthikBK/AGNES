//
// Generated by Bluespec Compiler, version 2021.07-3-g8227dc97 (build 8227dc97)
//
// On Fri Sep  3 12:09:31 PDT 2021
//
//
// Ports:
// Name                         I/O  size props
// RDY_inst_response_put          O     1 reg
// rx_from_stage0_deq_ena         O     1
// tx_to_stage2_enq_ena           O     1
// tx_to_stage2_enq_data          O    87
// tx_to_stage2_inst_enq_ena      O     1
// tx_to_stage2_inst_enq_data     O    32
// RDY_update_eEpoch              O     1 const
// RDY_update_wEpoch              O     1 const
// RDY_csr_misa_c                 O     1 const
// CLK                            I     1 clock
// RST_N                          I     1 reset
// inst_response_put              I    41
// rx_from_stage0_notEmpty_b      I     1
// rx_from_stage0_first_deq_rdy_b  I     1
// rx_from_stage0_first_x         I    45
// tx_to_stage2_notFull_b         I     1
// tx_to_stage2_enq_rdy_b         I     1
// tx_to_stage2_inst_notFull_b    I     1 unused
// tx_to_stage2_inst_enq_rdy_b    I     1
// csr_misa_c_c                   I     1
// EN_inst_response_put           I     1
// EN_update_eEpoch               I     1
// EN_update_wEpoch               I     1
// EN_csr_misa_c                  I     1
//
// Combinational paths from inputs to outputs:
//   (inst_response_put,
//    rx_from_stage0_notEmpty_b,
//    rx_from_stage0_first_deq_rdy_b,
//    tx_to_stage2_notFull_b,
//    tx_to_stage2_enq_rdy_b,
//    tx_to_stage2_inst_enq_rdy_b,
//    EN_inst_response_put,
//    EN_csr_misa_c) -> rx_from_stage0_deq_ena
//   (inst_response_put,
//    rx_from_stage0_notEmpty_b,
//    rx_from_stage0_first_deq_rdy_b,
//    rx_from_stage0_first_x,
//    tx_to_stage2_notFull_b,
//    tx_to_stage2_enq_rdy_b,
//    tx_to_stage2_inst_enq_rdy_b,
//    csr_misa_c_c,
//    EN_inst_response_put,
//    EN_csr_misa_c) -> tx_to_stage2_enq_ena
//   (inst_response_put,
//    rx_from_stage0_notEmpty_b,
//    rx_from_stage0_first_deq_rdy_b,
//    rx_from_stage0_first_x,
//    tx_to_stage2_notFull_b,
//    tx_to_stage2_enq_rdy_b,
//    tx_to_stage2_inst_enq_rdy_b,
//    csr_misa_c_c,
//    EN_inst_response_put,
//    EN_csr_misa_c) -> tx_to_stage2_enq_data
//   (inst_response_put,
//    rx_from_stage0_notEmpty_b,
//    rx_from_stage0_first_deq_rdy_b,
//    rx_from_stage0_first_x,
//    tx_to_stage2_notFull_b,
//    tx_to_stage2_enq_rdy_b,
//    tx_to_stage2_inst_enq_rdy_b,
//    csr_misa_c_c,
//    EN_inst_response_put,
//    EN_csr_misa_c) -> tx_to_stage2_inst_enq_ena
//   (inst_response_put,
//    rx_from_stage0_notEmpty_b,
//    rx_from_stage0_first_deq_rdy_b,
//    rx_from_stage0_first_x,
//    tx_to_stage2_notFull_b,
//    tx_to_stage2_enq_rdy_b,
//    tx_to_stage2_inst_enq_rdy_b,
//    csr_misa_c_c,
//    EN_inst_response_put,
//    EN_csr_misa_c) -> tx_to_stage2_inst_enq_data
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkstage1(CLK,
		RST_N,

		inst_response_put,
		EN_inst_response_put,
		RDY_inst_response_put,

		rx_from_stage0_notEmpty_b,

		rx_from_stage0_first_deq_rdy_b,

		rx_from_stage0_first_x,

		rx_from_stage0_deq_ena,

		tx_to_stage2_notFull_b,

		tx_to_stage2_enq_rdy_b,

		tx_to_stage2_enq_ena,

		tx_to_stage2_enq_data,

		tx_to_stage2_inst_notFull_b,

		tx_to_stage2_inst_enq_rdy_b,

		tx_to_stage2_inst_enq_ena,

		tx_to_stage2_inst_enq_data,

		EN_update_eEpoch,
		RDY_update_eEpoch,

		EN_update_wEpoch,
		RDY_update_wEpoch,

		csr_misa_c_c,
		EN_csr_misa_c,
		RDY_csr_misa_c);
  parameter [31 : 0] hartid = 32'b0;
  input  CLK;
  input  RST_N;

  // action method inst_response_put
  input  [40 : 0] inst_response_put;
  input  EN_inst_response_put;
  output RDY_inst_response_put;

  // action method rx_from_stage0_notEmpty
  input  rx_from_stage0_notEmpty_b;

  // action method rx_from_stage0_first_deq_rdy
  input  rx_from_stage0_first_deq_rdy_b;

  // action method rx_from_stage0_first
  input  [44 : 0] rx_from_stage0_first_x;

  // value method rx_from_stage0_deq_ena
  output rx_from_stage0_deq_ena;

  // action method tx_to_stage2_notFull
  input  tx_to_stage2_notFull_b;

  // action method tx_to_stage2_enq_rdy
  input  tx_to_stage2_enq_rdy_b;

  // value method tx_to_stage2_enq_ena
  output tx_to_stage2_enq_ena;

  // value method tx_to_stage2_enq_data
  output [86 : 0] tx_to_stage2_enq_data;

  // action method tx_to_stage2_inst_notFull
  input  tx_to_stage2_inst_notFull_b;

  // action method tx_to_stage2_inst_enq_rdy
  input  tx_to_stage2_inst_enq_rdy_b;

  // value method tx_to_stage2_inst_enq_ena
  output tx_to_stage2_inst_enq_ena;

  // value method tx_to_stage2_inst_enq_data
  output [31 : 0] tx_to_stage2_inst_enq_data;

  // action method update_eEpoch
  input  EN_update_eEpoch;
  output RDY_update_eEpoch;

  // action method update_wEpoch
  input  EN_update_wEpoch;
  output RDY_update_wEpoch;

  // action method csr_misa_c
  input  csr_misa_c_c;
  input  EN_csr_misa_c;
  output RDY_csr_misa_c;

  // signals for module outputs
  wire [86 : 0] tx_to_stage2_enq_data;
  wire [31 : 0] tx_to_stage2_inst_enq_data;
  wire RDY_csr_misa_c,
       RDY_inst_response_put,
       RDY_update_eEpoch,
       RDY_update_wEpoch,
       rx_from_stage0_deq_ena,
       tx_to_stage2_enq_ena,
       tx_to_stage2_inst_enq_ena;

  // inlined wires
  wire ff_memory_response_dequeueing_whas, tx_tostage2_w_ena_whas;

  // register rg_action
  reg rg_action;
  wire rg_action_D_IN, rg_action_EN;

  // register rg_eEpoch
  reg rg_eEpoch;
  wire rg_eEpoch_D_IN, rg_eEpoch_EN;

  // register rg_prev
  reg [61 : 0] rg_prev;
  wire [61 : 0] rg_prev_D_IN;
  wire rg_prev_EN;

  // register rg_receiving_upper
  reg rg_receiving_upper;
  wire rg_receiving_upper_D_IN, rg_receiving_upper_EN;

  // register rg_wEpoch
  reg rg_wEpoch;
  wire rg_wEpoch_D_IN, rg_wEpoch_EN;

  // ports of submodule ff_memory_response_ff
  wire [40 : 0] ff_memory_response_ff_D_IN, ff_memory_response_ff_D_OUT;
  wire ff_memory_response_ff_CLR,
       ff_memory_response_ff_DEQ,
       ff_memory_response_ff_EMPTY_N,
       ff_memory_response_ff_ENQ,
       ff_memory_response_ff_FULL_N;

  // ports of submodule ff_memory_response_firstValid
  wire ff_memory_response_firstValid_D_IN,
       ff_memory_response_firstValid_EN,
       ff_memory_response_firstValid_Q_OUT;

  // rule scheduling signals
  wire CAN_FIRE_RL_ff_memory_response_dequeue,
       CAN_FIRE_RL_ff_memory_response_enqueue,
       CAN_FIRE_RL_process_instruction,
       CAN_FIRE_csr_misa_c,
       CAN_FIRE_inst_response_put,
       CAN_FIRE_rx_from_stage0_first,
       CAN_FIRE_rx_from_stage0_first_deq_rdy,
       CAN_FIRE_rx_from_stage0_notEmpty,
       CAN_FIRE_tx_to_stage2_enq_rdy,
       CAN_FIRE_tx_to_stage2_inst_enq_rdy,
       CAN_FIRE_tx_to_stage2_inst_notFull,
       CAN_FIRE_tx_to_stage2_notFull,
       CAN_FIRE_update_eEpoch,
       CAN_FIRE_update_wEpoch,
       WILL_FIRE_RL_ff_memory_response_dequeue,
       WILL_FIRE_RL_ff_memory_response_enqueue,
       WILL_FIRE_RL_process_instruction,
       WILL_FIRE_csr_misa_c,
       WILL_FIRE_inst_response_put,
       WILL_FIRE_rx_from_stage0_first,
       WILL_FIRE_rx_from_stage0_first_deq_rdy,
       WILL_FIRE_rx_from_stage0_notEmpty,
       WILL_FIRE_tx_to_stage2_enq_rdy,
       WILL_FIRE_tx_to_stage2_inst_enq_rdy,
       WILL_FIRE_tx_to_stage2_inst_notFull,
       WILL_FIRE_tx_to_stage2_notFull,
       WILL_FIRE_update_eEpoch,
       WILL_FIRE_update_wEpoch;

  // declarations used by system tasks
  // synopsys translate_off
  reg TASK_testplusargs___d342;
  reg TASK_testplusargs___d343;
  reg TASK_testplusargs___d344;
  reg [63 : 0] v__h5562;
  reg TASK_testplusargs___d24;
  reg TASK_testplusargs___d25;
  reg TASK_testplusargs___d26;
  reg [63 : 0] v__h1748;
  reg TASK_testplusargs___d128;
  reg TASK_testplusargs___d129;
  reg TASK_testplusargs___d130;
  reg [63 : 0] v__h3243;
  reg TASK_testplusargs___d141;
  reg TASK_testplusargs___d142;
  reg TASK_testplusargs___d143;
  reg [63 : 0] v__h3609;
  reg TASK_testplusargs___d153;
  reg TASK_testplusargs___d154;
  reg TASK_testplusargs___d155;
  reg [63 : 0] v__h2373;
  reg TASK_testplusargs___d188;
  reg TASK_testplusargs___d189;
  reg TASK_testplusargs___d190;
  reg [63 : 0] v__h4384;
  reg TASK_testplusargs___d210;
  reg TASK_testplusargs___d211;
  reg TASK_testplusargs___d212;
  reg [63 : 0] v__h4619;
  reg TASK_testplusargs___d241;
  reg TASK_testplusargs___d242;
  reg TASK_testplusargs___d243;
  reg [63 : 0] v__h4913;
  reg TASK_testplusargs___d284;
  reg TASK_testplusargs___d285;
  reg TASK_testplusargs___d286;
  reg [63 : 0] v__h5316;
  reg NOT_IF_ff_memory_response_ff_i_notEmpty_THEN_f_ETC___d133;
  reg rg_action_7_OR_NOT_rg_prev_9_BITS_13_TO_12_0_E_ETC___d135;
  reg wr_csr_misa_c_wget__7_AND_TASK_testplusargs_41_ETC___d146;
  reg rg_action_7_OR_NOT_rg_prev_9_BITS_13_TO_12_0_E_ETC___d149;
  reg TASK_testplusargs_84_OR_TASK_testplusargs_85_A_ETC___d293;
  reg TASK_testplusargs_84_OR_TASK_testplusargs_85_A_ETC___d297;
  reg TASK_testplusargs_84_OR_TASK_testplusargs_85_A_ETC___d303;
  reg TASK_testplusargs_84_OR_TASK_testplusargs_85_A_ETC___d305;
  reg TASK_testplusargs_84_OR_TASK_testplusargs_85_A_ETC___d310;
  reg TASK_testplusargs_84_OR_TASK_testplusargs_85_A_ETC___d312;
  reg TASK_testplusargs_84_OR_TASK_testplusargs_85_A_ETC___d324;
  reg TASK_testplusargs_84_OR_TASK_testplusargs_85_A_ETC___d332;
  reg TASK_testplusargs_84_OR_TASK_testplusargs_85_A_ETC___d335;
  reg TASK_testplusargs_84_OR_TASK_testplusargs_85_A_ETC___d338;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d37;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d40;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d46;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d48;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d52;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d54;
  reg NOT_rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff__ETC___d158;
  reg TASK_testplusargs_10_OR_TASK_testplusargs_11_A_ETC___d232;
  reg TASK_testplusargs_10_OR_TASK_testplusargs_11_A_ETC___d236;
  reg TASK_testplusargs_41_OR_TASK_testplusargs_42_A_ETC___d247;
  reg TASK_testplusargs_41_OR_TASK_testplusargs_42_A_ETC___d248;
  reg rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d289;
  reg TASK_testplusargs_42_OR_TASK_testplusargs_43_A_ETC___d350;
  reg TASK_testplusargs_42_OR_TASK_testplusargs_43_A_ETC___d352;
  // synopsys translate_on

  // remaining internal signals
  wire [31 : 0] IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73,
		IF_rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_m_ETC___d225,
		_theResult_____1__h4317,
		final_instruction___1__h4451,
		final_instruction__h3946,
		rx_from_stage0_first_x_BITS_44_TO_13__q1,
		x1_avValue_fst_address__h4682,
		x1_avValue_fst_address__h4688,
		x1_avValue_snd_fst_address__h4691,
		x1_avValue_snd_fst_address__h4694,
		x1_avValue_snd_snd_snd_pc__h4165,
		x1_avValue_snd_snd_snd_pc__h4169,
		x1_avValue_snd_snd_snd_snd_pc__h4064,
		x1_avValue_snd_snd_snd_snd_snd_pc__h4131,
		x1_avValue_snd_snd_snd_snd_snd_snd_pc__h4173,
		x1_avValue_snd_snd_snd_snd_snd_snd_pc__h4177,
		x_pc__h3979,
		y_avValue_fst_address__h4685,
		y_avValue_snd_fst__h4141,
		y_avValue_snd_snd_snd_fst__h4018,
		y_avValue_snd_snd_snd_fst__h4020,
		y_avValue_snd_snd_snd_fst__h4079,
		y_avValue_snd_snd_snd_fst__h4081;
  wire [15 : 0] x1_avValue_snd_snd_snd_instruction__h4166,
		x1_avValue_snd_snd_snd_instruction__h4170,
		x1_avValue_snd_snd_snd_snd_instruction__h4065,
		x1_avValue_snd_snd_snd_snd_snd_instruction__h4132,
		x1_avValue_snd_snd_snd_snd_snd_snd_instruction__h4174,
		x1_avValue_snd_snd_snd_snd_snd_snd_instruction__h4178,
		x_instruction__h3980;
  wire [13 : 0] rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_CONCAT_IF_rg__ETC___d186;
  wire [12 : 0] IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d280;
  wire [11 : 0] IF_IF_ff_memory_response_ff_i_notEmpty_THEN_ff_ETC___d182,
		IF_IF_rx_fromstage0_w_data_whas__0_THEN_rx_fro_ETC___d183,
		IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d184;
  wire [9 : 0] IF_IF_rx_fromstage0_w_data_whas__0_THEN_rx_fro_ETC___d278;
  wire [7 : 0] x1_avValue_fst_history__h5185;
  wire [5 : 0] cause__h4316;
  wire [1 : 0] curr_epoch__h1651,
	       x1_avValue_fst_prediction__h5170,
	       x1_avValue_fst_prediction__h5174,
	       x1_avValue_fst_prediction__h5178,
	       x1_avValue_fst_prediction__h5182,
	       x__h2660,
	       y__h2056,
	       y_avValue_fst_prediction__h5153,
	       y_avValue_fst_prediction__h5166;
  wire IF_IF_ff_memory_response_ff_i_notEmpty_THEN_ff_ETC___d275,
       IF_IF_ff_memory_response_ff_i_notEmpty_THEN_ff_ETC___d321,
       IF_IF_rx_fromstage0_w_data_whas__0_THEN_rx_fro_ETC___d120,
       IF_IF_rx_fromstage0_w_data_whas__0_THEN_rx_fro_ETC___d194,
       IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d103,
       IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d195,
       IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d259,
       IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d292,
       IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d296,
       IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d309,
       IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d323,
       IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d331,
       IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d334,
       IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d337,
       IF_ff_memory_response_ff_i_notEmpty_THEN_NOT_f_ETC___d231,
       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d235,
       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d257,
       IF_rg_prev_9_BIT_8_4_THEN_rg_prev_9_BITS_11_TO_ETC___d97,
       IF_rx_fromstage0_w_data_whas__0_THEN_rx_fromst_ETC___d100,
       NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d113,
       NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d254,
       NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d91,
       NOT_rg_receiving_upper_50_99_OR_IF_ff_memory_r_ETC___d302,
       ff_memory_response_firstValid_read_AND_ff_memo_ETC___d19,
       rg_action_7_OR_NOT_rg_prev_9_BITS_13_TO_12_0_E_ETC___d126,
       rg_action_7_OR_NOT_rg_prev_9_BITS_13_TO_12_0_E_ETC___d139,
       rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89,
       rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64;

  // action method inst_response_put
  assign RDY_inst_response_put = ff_memory_response_ff_FULL_N ;
  assign CAN_FIRE_inst_response_put = ff_memory_response_ff_FULL_N ;
  assign WILL_FIRE_inst_response_put = EN_inst_response_put ;

  // action method rx_from_stage0_notEmpty
  assign CAN_FIRE_rx_from_stage0_notEmpty = 1'd1 ;
  assign WILL_FIRE_rx_from_stage0_notEmpty = 1'd1 ;

  // action method rx_from_stage0_first_deq_rdy
  assign CAN_FIRE_rx_from_stage0_first_deq_rdy = 1'd1 ;
  assign WILL_FIRE_rx_from_stage0_first_deq_rdy = 1'd1 ;

  // action method rx_from_stage0_first
  assign CAN_FIRE_rx_from_stage0_first = 1'd1 ;
  assign WILL_FIRE_rx_from_stage0_first = 1'd1 ;

  // value method rx_from_stage0_deq_ena
  assign rx_from_stage0_deq_ena = ff_memory_response_dequeueing_whas ;

  // action method tx_to_stage2_notFull
  assign CAN_FIRE_tx_to_stage2_notFull = 1'd1 ;
  assign WILL_FIRE_tx_to_stage2_notFull = 1'd1 ;

  // action method tx_to_stage2_enq_rdy
  assign CAN_FIRE_tx_to_stage2_enq_rdy = 1'd1 ;
  assign WILL_FIRE_tx_to_stage2_enq_rdy = 1'd1 ;

  // value method tx_to_stage2_enq_ena
  assign tx_to_stage2_enq_ena = tx_tostage2_w_ena_whas ;

  // value method tx_to_stage2_enq_data
  assign tx_to_stage2_enq_data =
	     { IF_rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_m_ETC___d225,
	       _theResult_____1__h4317,
	       curr_epoch__h1651,
	       IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d259,
	       cause__h4316,
	       rg_receiving_upper &&
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d257,
	       IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d280 } ;

  // action method tx_to_stage2_inst_notFull
  assign CAN_FIRE_tx_to_stage2_inst_notFull = 1'd1 ;
  assign WILL_FIRE_tx_to_stage2_inst_notFull = 1'd1 ;

  // action method tx_to_stage2_inst_enq_rdy
  assign CAN_FIRE_tx_to_stage2_inst_enq_rdy = 1'd1 ;
  assign WILL_FIRE_tx_to_stage2_inst_enq_rdy = 1'd1 ;

  // value method tx_to_stage2_inst_enq_ena
  assign tx_to_stage2_inst_enq_ena = tx_tostage2_w_ena_whas ;

  // value method tx_to_stage2_inst_enq_data
  assign tx_to_stage2_inst_enq_data =
	     (!rg_action &&
	      rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) ?
	       y_avValue_snd_snd_snd_fst__h4018 :
	       y_avValue_snd_snd_snd_fst__h4020 ;

  // action method update_eEpoch
  assign RDY_update_eEpoch = 1'd1 ;
  assign CAN_FIRE_update_eEpoch = 1'd1 ;
  assign WILL_FIRE_update_eEpoch = EN_update_eEpoch ;

  // action method update_wEpoch
  assign RDY_update_wEpoch = 1'd1 ;
  assign CAN_FIRE_update_wEpoch = 1'd1 ;
  assign WILL_FIRE_update_wEpoch = EN_update_wEpoch ;

  // action method csr_misa_c
  assign RDY_csr_misa_c = 1'd1 ;
  assign CAN_FIRE_csr_misa_c = 1'd1 ;
  assign WILL_FIRE_csr_misa_c = EN_csr_misa_c ;

  // submodule ff_memory_response_ff
  FIFO2 #(.width(32'd41), .guarded(1'd0)) ff_memory_response_ff(.RST(RST_N),
								.CLK(CLK),
								.D_IN(ff_memory_response_ff_D_IN),
								.ENQ(ff_memory_response_ff_ENQ),
								.DEQ(ff_memory_response_ff_DEQ),
								.CLR(ff_memory_response_ff_CLR),
								.D_OUT(ff_memory_response_ff_D_OUT),
								.FULL_N(ff_memory_response_ff_FULL_N),
								.EMPTY_N(ff_memory_response_ff_EMPTY_N));

  // submodule ff_memory_response_firstValid
  RevertReg #(.width(32'd1),
	      .init(1'd1)) ff_memory_response_firstValid(.CLK(CLK),
							 .D_IN(ff_memory_response_firstValid_D_IN),
							 .EN(ff_memory_response_firstValid_EN),
							 .Q_OUT(ff_memory_response_firstValid_Q_OUT));

  // rule RL_process_instruction
  assign CAN_FIRE_RL_process_instruction =
	     ff_memory_response_firstValid_read_AND_ff_memo_ETC___d19 &&
	     rx_from_stage0_notEmpty_b &&
	     tx_to_stage2_notFull_b ;
  assign WILL_FIRE_RL_process_instruction = CAN_FIRE_RL_process_instruction ;

  // rule RL_ff_memory_response_enqueue
  assign CAN_FIRE_RL_ff_memory_response_enqueue =
	     EN_inst_response_put &&
	     (!ff_memory_response_dequeueing_whas ||
	      ff_memory_response_ff_EMPTY_N) ;
  assign WILL_FIRE_RL_ff_memory_response_enqueue =
	     CAN_FIRE_RL_ff_memory_response_enqueue ;

  // rule RL_ff_memory_response_dequeue
  assign CAN_FIRE_RL_ff_memory_response_dequeue =
	     ff_memory_response_dequeueing_whas &&
	     ff_memory_response_ff_EMPTY_N ;
  assign WILL_FIRE_RL_ff_memory_response_dequeue =
	     CAN_FIRE_RL_ff_memory_response_dequeue ;

  // inlined wires
  assign tx_tostage2_w_ena_whas =
	     WILL_FIRE_RL_process_instruction &&
	     rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	     NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d254 ;
  assign ff_memory_response_dequeueing_whas =
	     WILL_FIRE_RL_process_instruction &&
	     (rg_prev[15:14] == 2'b11 || rg_action ||
	      !rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64 ||
	      !rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89) ;

  // register rg_action
  assign rg_action_D_IN =
	     !rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 ||
	     !rg_action &&
	     rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64 ||
	     IF_IF_rx_fromstage0_w_data_whas__0_THEN_rx_fro_ETC___d120 ;
  assign rg_action_EN =
	     WILL_FIRE_RL_process_instruction &&
	     (NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d113 ||
	      !rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89) ;

  // register rg_eEpoch
  assign rg_eEpoch_D_IN = ~rg_eEpoch ;
  assign rg_eEpoch_EN = EN_update_eEpoch ;

  // register rg_prev
  assign rg_prev_D_IN =
	     { x_pc__h3979,
	       x_instruction__h3980,
	       rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_CONCAT_IF_rg__ETC___d186 } ;
  assign rg_prev_EN = CAN_FIRE_RL_process_instruction ;

  // register rg_receiving_upper
  assign rg_receiving_upper_D_IN =
	     rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	     IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d103 ;
  assign rg_receiving_upper_EN =
	     WILL_FIRE_RL_process_instruction &&
	     NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d91 ;

  // register rg_wEpoch
  assign rg_wEpoch_D_IN = ~rg_wEpoch ;
  assign rg_wEpoch_EN = EN_update_wEpoch ;

  // submodule ff_memory_response_ff
  assign ff_memory_response_ff_D_IN = inst_response_put ;
  assign ff_memory_response_ff_ENQ = CAN_FIRE_RL_ff_memory_response_enqueue ;
  assign ff_memory_response_ff_DEQ = CAN_FIRE_RL_ff_memory_response_dequeue ;
  assign ff_memory_response_ff_CLR = 1'b0 ;

  // submodule ff_memory_response_firstValid
  assign ff_memory_response_firstValid_D_IN = 1'd1 ;
  assign ff_memory_response_firstValid_EN =
	     ff_memory_response_dequeueing_whas ;

  // remaining internal signals
  module_fn_decompress instance_fn_decompress_0(.fn_decompress_inst(final_instruction__h3946[15:0]),
						.fn_decompress(final_instruction___1__h4451));
  assign IF_IF_ff_memory_response_ff_i_notEmpty_THEN_ff_ETC___d182 =
	     (IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[1:0] ==
	      2'b11) ?
	       rg_prev[11:0] :
	       (csr_misa_c_c ? rx_from_stage0_first_x[11:0] : rg_prev[11:0]) ;
  assign IF_IF_ff_memory_response_ff_i_notEmpty_THEN_ff_ETC___d275 =
	     (IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[1:0] ==
	      2'b11) ?
	       rx_from_stage0_first_x[9] :
	       (csr_misa_c_c ?
		  !rx_from_stage0_first_x[8] && rx_from_stage0_first_x[9] :
		  rx_from_stage0_first_x[9]) ;
  assign IF_IF_ff_memory_response_ff_i_notEmpty_THEN_ff_ETC___d321 =
	     (IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[1:0] ==
	      2'b11) ?
	       !rx_from_stage0_first_x[9] :
	       (csr_misa_c_c ?
		  rx_from_stage0_first_x[8] || !rx_from_stage0_first_x[9] :
		  !rx_from_stage0_first_x[9]) ;
  assign IF_IF_rx_fromstage0_w_data_whas__0_THEN_rx_fro_ETC___d120 =
	     (rx_from_stage0_first_x[12] && csr_misa_c_c) ?
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[17:16] !=
	       2'b11 :
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[1:0] ==
	       2'b11 ||
	       !rx_from_stage0_first_x[8] &&
	       !IF_rx_fromstage0_w_data_whas__0_THEN_rx_fromst_ETC___d100 ;
  assign IF_IF_rx_fromstage0_w_data_whas__0_THEN_rx_fro_ETC___d183 =
	     (rx_from_stage0_first_x[12] && csr_misa_c_c) ?
	       ((IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[17:16] ==
		 2'b11) ?
		  rx_from_stage0_first_x[11:0] :
		  rg_prev[11:0]) :
	       IF_IF_ff_memory_response_ff_i_notEmpty_THEN_ff_ETC___d182 ;
  assign IF_IF_rx_fromstage0_w_data_whas__0_THEN_rx_fro_ETC___d194 =
	     (rx_from_stage0_first_x[12] && csr_misa_c_c) ?
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[17:16] !=
	       2'b11 :
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[1:0] !=
	       2'b11 &&
	       csr_misa_c_c ;
  assign IF_IF_rx_fromstage0_w_data_whas__0_THEN_rx_fro_ETC___d278 =
	     { (rx_from_stage0_first_x[12] && csr_misa_c_c) ?
		 rx_from_stage0_first_x[8] && rx_from_stage0_first_x[9] :
		 IF_IF_ff_memory_response_ff_i_notEmpty_THEN_ff_ETC___d275,
	       rx_from_stage0_first_x[8:0] } ;
  assign IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d103 =
	     (!rg_action &&
	      rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) ?
	       rg_prev[15:14] == 2'b11 &&
	       IF_rg_prev_9_BIT_8_4_THEN_rg_prev_9_BITS_11_TO_ETC___d97 :
	       rx_from_stage0_first_x[12] && csr_misa_c_c ||
	       rx_from_stage0_first_x[8] ||
	       IF_rx_fromstage0_w_data_whas__0_THEN_rx_fromst_ETC___d100 ;
  assign IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d184 =
	     (!rg_action &&
	      rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) ?
	       ((rg_prev[15:14] == 2'b11) ?
		  rx_from_stage0_first_x[11:0] :
		  rg_prev[11:0]) :
	       IF_IF_rx_fromstage0_w_data_whas__0_THEN_rx_fro_ETC___d183 ;
  assign IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d195 =
	     (!rg_action &&
	      rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) ?
	       rg_prev[15:14] != 2'b11 :
	       IF_IF_rx_fromstage0_w_data_whas__0_THEN_rx_fro_ETC___d194 ;
  assign IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d259 =
	     (!rg_action &&
	      rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) ?
	       rg_prev[15:14] == 2'b11 &&
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d257 :
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d257 ;
  assign IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d280 =
	     (!rg_action &&
	      rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) ?
	       { rg_prev[15:14] != 2'b11,
		 x__h2660,
		 rg_prev[8] && rg_prev[9],
		 rg_prev[8:0] } :
	       { IF_IF_rx_fromstage0_w_data_whas__0_THEN_rx_fro_ETC___d194,
		 x1_avValue_fst_prediction__h5178,
		 IF_IF_rx_fromstage0_w_data_whas__0_THEN_rx_fro_ETC___d278 } ;
  assign IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d292 =
	     (!rg_action &&
	      rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) ?
	       rg_prev[15:14] != 2'b11 ||
	       IF_ff_memory_response_ff_i_notEmpty_THEN_NOT_f_ETC___d231 :
	       IF_ff_memory_response_ff_i_notEmpty_THEN_NOT_f_ETC___d231 ;
  assign IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d296 =
	     (!rg_action &&
	      rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) ?
	       rg_prev[15:14] == 2'b11 &&
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d235 :
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d235 ;
  assign IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d309 =
	     (!rg_action &&
	      rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) ?
	       rg_prev[15:14] == 2'b11 :
	       ((rx_from_stage0_first_x[12] && csr_misa_c_c) ?
		  IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[17:16] ==
		  2'b11 :
		  IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[1:0] ==
		  2'b11 ||
		  !csr_misa_c_c) ;
  assign IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d323 =
	     (!rg_action &&
	      rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) ?
	       !rg_prev[8] || !rg_prev[9] :
	       ((rx_from_stage0_first_x[12] && csr_misa_c_c) ?
		  !rx_from_stage0_first_x[8] || !rx_from_stage0_first_x[9] :
		  IF_IF_ff_memory_response_ff_i_notEmpty_THEN_ff_ETC___d321) ;
  assign IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d331 =
	     (!rg_action &&
	      rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) ?
	       rg_prev[8] && rg_prev[9] :
	       ((rx_from_stage0_first_x[12] && csr_misa_c_c) ?
		  rx_from_stage0_first_x[8] && rx_from_stage0_first_x[9] :
		  IF_IF_ff_memory_response_ff_i_notEmpty_THEN_ff_ETC___d275) ;
  assign IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d334 =
	     (!rg_action &&
	      rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) ?
	       !rg_prev[8] :
	       !rx_from_stage0_first_x[8] ;
  assign IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d337 =
	     (!rg_action &&
	      rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) ?
	       rg_prev[8] :
	       rx_from_stage0_first_x[8] ;
  assign IF_ff_memory_response_ff_i_notEmpty_THEN_NOT_f_ETC___d231 =
	     ff_memory_response_ff_EMPTY_N ?
	       !ff_memory_response_ff_D_OUT[8] :
	       EN_inst_response_put && !inst_response_put[8] ;
  assign IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d235 =
	     ff_memory_response_ff_EMPTY_N ?
	       ff_memory_response_ff_D_OUT[8] :
	       !EN_inst_response_put || inst_response_put[8] ;
  assign IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d257 =
	     ff_memory_response_ff_EMPTY_N ?
	       ff_memory_response_ff_D_OUT[8] :
	       inst_response_put[8] ;
  assign IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73 =
	     ff_memory_response_ff_EMPTY_N ?
	       ff_memory_response_ff_D_OUT[40:9] :
	       inst_response_put[40:9] ;
  assign IF_rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_m_ETC___d225 =
	     rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 ?
	       x1_avValue_snd_fst_address__h4694 :
	       rx_from_stage0_first_x[44:13] ;
  assign IF_rg_prev_9_BIT_8_4_THEN_rg_prev_9_BITS_11_TO_ETC___d97 =
	     x__h2660 <= 2'd1 ;
  assign IF_rx_fromstage0_w_data_whas__0_THEN_rx_fromst_ETC___d100 =
	     rx_from_stage0_first_x[11:10] <= 2'd1 ;
  assign NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d113 =
	     !rg_action &&
	     rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64 &&
	     (!IF_rg_prev_9_BIT_8_4_THEN_rg_prev_9_BITS_11_TO_ETC___d97 ||
	      rg_prev[15:14] != 2'b11) ||
	     (rg_action ||
	      !rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) &&
	     (IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[1:0] ==
	      2'b11 ||
	      csr_misa_c_c) ;
  assign NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d254 =
	     !rg_action &&
	     rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64 ||
	     !rx_from_stage0_first_x[12] ||
	     !csr_misa_c_c ||
	     IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[17:16] !=
	     2'b11 ;
  assign NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d91 =
	     !rg_action &&
	     rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64 ||
	     rx_from_stage0_first_x[12] && csr_misa_c_c &&
	     IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[17:16] ==
	     2'b11 ||
	     !rx_from_stage0_first_x[12] &&
	     IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[1:0] !=
	     2'b11 &&
	     csr_misa_c_c ||
	     !rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 ;
  assign NOT_rg_receiving_upper_50_99_OR_IF_ff_memory_r_ETC___d302 =
	     !rg_receiving_upper ||
	     (ff_memory_response_ff_EMPTY_N ?
		!ff_memory_response_ff_D_OUT[8] :
		!inst_response_put[8]) ;
  assign _theResult_____1__h4317 =
	     (rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	      IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d195) ?
	       final_instruction___1__h4451 :
	       final_instruction__h3946 ;
  assign cause__h4316 =
	     ff_memory_response_ff_EMPTY_N ?
	       ff_memory_response_ff_D_OUT[7:2] :
	       inst_response_put[7:2] ;
  assign curr_epoch__h1651 = { rg_eEpoch, rg_wEpoch } ;
  assign ff_memory_response_firstValid_read_AND_ff_memo_ETC___d19 =
	     ff_memory_response_firstValid_Q_OUT &&
	     (ff_memory_response_ff_EMPTY_N || EN_inst_response_put) &&
	     rx_from_stage0_first_deq_rdy_b &&
	     EN_csr_misa_c &&
	     tx_to_stage2_inst_enq_rdy_b &&
	     tx_to_stage2_enq_rdy_b ;
  assign final_instruction__h3946 = tx_to_stage2_inst_enq_data ;
  assign rg_action_7_OR_NOT_rg_prev_9_BITS_13_TO_12_0_E_ETC___d126 =
	     (rg_action ||
	      !rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) &&
	     rx_from_stage0_first_x[12] &&
	     csr_misa_c_c &&
	     IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[17:16] !=
	     2'b11 ;
  assign rg_action_7_OR_NOT_rg_prev_9_BITS_13_TO_12_0_E_ETC___d139 =
	     (rg_action ||
	      !rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) &&
	     !rx_from_stage0_first_x[12] &&
	     IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[1:0] !=
	     2'b11 &&
	     csr_misa_c_c ;
  assign rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_CONCAT_IF_rg__ETC___d186 =
	     { curr_epoch__h1651,
	       rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 ?
		 IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d184 :
		 rg_prev[11:0] } ;
  assign rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 =
	     curr_epoch__h1651 == y__h2056 ;
  assign rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64 =
	     rg_prev[13:12] == curr_epoch__h1651 ;
  assign rx_from_stage0_first_x_BITS_44_TO_13__q1 =
	     rx_from_stage0_first_x[44:13] ;
  assign x1_avValue_fst_address__h4682 =
	     { rg_prev[61:32], 1'd1, rg_prev[30] } ;
  assign x1_avValue_fst_address__h4688 =
	     (IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[17:16] ==
	      2'b11) ?
	       rx_from_stage0_first_x[44:13] :
	       y_avValue_fst_address__h4685 ;
  assign x1_avValue_fst_history__h5185 =
	     (!rg_action &&
	      rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) ?
	       rg_prev[7:0] :
	       rx_from_stage0_first_x[7:0] ;
  assign x1_avValue_fst_prediction__h5170 =
	     csr_misa_c_c ?
	       y_avValue_fst_prediction__h5166 :
	       rx_from_stage0_first_x[11:10] ;
  assign x1_avValue_fst_prediction__h5174 =
	     (IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[1:0] ==
	      2'b11) ?
	       rx_from_stage0_first_x[11:10] :
	       x1_avValue_fst_prediction__h5170 ;
  assign x1_avValue_fst_prediction__h5178 =
	     (rx_from_stage0_first_x[12] && csr_misa_c_c) ?
	       y_avValue_fst_prediction__h5153 :
	       x1_avValue_fst_prediction__h5174 ;
  assign x1_avValue_fst_prediction__h5182 =
	     (!rg_action &&
	      rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) ?
	       x__h2660 :
	       x1_avValue_fst_prediction__h5178 ;
  assign x1_avValue_snd_fst_address__h4691 =
	     (rx_from_stage0_first_x[12] && csr_misa_c_c) ?
	       x1_avValue_fst_address__h4688 :
	       rx_from_stage0_first_x[44:13] ;
  assign x1_avValue_snd_fst_address__h4694 =
	     (!rg_action &&
	      rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) ?
	       x1_avValue_fst_address__h4682 :
	       x1_avValue_snd_fst_address__h4691 ;
  assign x1_avValue_snd_snd_snd_instruction__h4166 =
	     csr_misa_c_c ?
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[31:16] :
	       rg_prev[29:14] ;
  assign x1_avValue_snd_snd_snd_instruction__h4170 =
	     (IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[1:0] ==
	      2'b11) ?
	       rg_prev[29:14] :
	       x1_avValue_snd_snd_snd_instruction__h4166 ;
  assign x1_avValue_snd_snd_snd_pc__h4165 =
	     csr_misa_c_c ? rx_from_stage0_first_x[44:13] : rg_prev[61:30] ;
  assign x1_avValue_snd_snd_snd_pc__h4169 =
	     (IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[1:0] ==
	      2'b11) ?
	       rg_prev[61:30] :
	       x1_avValue_snd_snd_snd_pc__h4165 ;
  assign x1_avValue_snd_snd_snd_snd_instruction__h4065 =
	     (rg_prev[15:14] == 2'b11) ?
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[31:16] :
	       rg_prev[29:14] ;
  assign x1_avValue_snd_snd_snd_snd_pc__h4064 =
	     (rg_prev[15:14] == 2'b11) ?
	       rx_from_stage0_first_x[44:13] :
	       rg_prev[61:30] ;
  assign x1_avValue_snd_snd_snd_snd_snd_instruction__h4132 =
	     (IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[17:16] ==
	      2'b11) ?
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[31:16] :
	       rg_prev[29:14] ;
  assign x1_avValue_snd_snd_snd_snd_snd_pc__h4131 =
	     (IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[17:16] ==
	      2'b11) ?
	       rx_from_stage0_first_x[44:13] :
	       rg_prev[61:30] ;
  assign x1_avValue_snd_snd_snd_snd_snd_snd_instruction__h4174 =
	     (rx_from_stage0_first_x[12] && csr_misa_c_c) ?
	       x1_avValue_snd_snd_snd_snd_snd_instruction__h4132 :
	       x1_avValue_snd_snd_snd_instruction__h4170 ;
  assign x1_avValue_snd_snd_snd_snd_snd_snd_instruction__h4178 =
	     (!rg_action &&
	      rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) ?
	       x1_avValue_snd_snd_snd_snd_instruction__h4065 :
	       x1_avValue_snd_snd_snd_snd_snd_snd_instruction__h4174 ;
  assign x1_avValue_snd_snd_snd_snd_snd_snd_pc__h4173 =
	     (rx_from_stage0_first_x[12] && csr_misa_c_c) ?
	       x1_avValue_snd_snd_snd_snd_snd_pc__h4131 :
	       x1_avValue_snd_snd_snd_pc__h4169 ;
  assign x1_avValue_snd_snd_snd_snd_snd_snd_pc__h4177 =
	     (!rg_action &&
	      rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) ?
	       x1_avValue_snd_snd_snd_snd_pc__h4064 :
	       x1_avValue_snd_snd_snd_snd_snd_snd_pc__h4173 ;
  assign x__h2660 = rg_prev[8] ? rg_prev[11:10] : 2'd1 ;
  assign x_instruction__h3980 =
	     rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 ?
	       x1_avValue_snd_snd_snd_snd_snd_snd_instruction__h4178 :
	       rg_prev[29:14] ;
  assign x_pc__h3979 =
	     rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 ?
	       x1_avValue_snd_snd_snd_snd_snd_snd_pc__h4177 :
	       rg_prev[61:30] ;
  assign y__h2056 =
	     ff_memory_response_ff_EMPTY_N ?
	       ff_memory_response_ff_D_OUT[1:0] :
	       inst_response_put[1:0] ;
  assign y_avValue_fst_address__h4685 =
	     { rx_from_stage0_first_x_BITS_44_TO_13__q1[31:2],
	       1'd1,
	       rx_from_stage0_first_x_BITS_44_TO_13__q1[0] } ;
  assign y_avValue_fst_prediction__h5153 =
	     rx_from_stage0_first_x[8] ?
	       rx_from_stage0_first_x[11:10] :
	       2'd1 ;
  assign y_avValue_fst_prediction__h5166 =
	     rx_from_stage0_first_x[8] ?
	       2'd1 :
	       rx_from_stage0_first_x[11:10] ;
  assign y_avValue_snd_fst__h4141 =
	     { 16'd0,
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[15:0] } ;
  assign y_avValue_snd_snd_snd_fst__h4018 =
	     { (rg_prev[15:14] == 2'b11) ?
		 IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[15:0] :
		 16'd0,
	       rg_prev[29:14] } ;
  assign y_avValue_snd_snd_snd_fst__h4020 =
	     (rx_from_stage0_first_x[12] && csr_misa_c_c) ?
	       y_avValue_snd_snd_snd_fst__h4079 :
	       y_avValue_snd_snd_snd_fst__h4081 ;
  assign y_avValue_snd_snd_snd_fst__h4079 =
	     { 16'd0,
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[31:16] } ;
  assign y_avValue_snd_snd_snd_fst__h4081 =
	     (IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[1:0] ==
	      2'b11) ?
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73 :
	       y_avValue_snd_fst__h4141 ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        rg_action <= `BSV_ASSIGNMENT_DELAY 1'd1;
	rg_eEpoch <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_prev <= `BSV_ASSIGNMENT_DELAY
	    62'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
	rg_receiving_upper <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_wEpoch <= `BSV_ASSIGNMENT_DELAY 1'd0;
      end
    else
      begin
        if (rg_action_EN) rg_action <= `BSV_ASSIGNMENT_DELAY rg_action_D_IN;
	if (rg_eEpoch_EN) rg_eEpoch <= `BSV_ASSIGNMENT_DELAY rg_eEpoch_D_IN;
	if (rg_prev_EN) rg_prev <= `BSV_ASSIGNMENT_DELAY rg_prev_D_IN;
	if (rg_receiving_upper_EN)
	  rg_receiving_upper <= `BSV_ASSIGNMENT_DELAY rg_receiving_upper_D_IN;
	if (rg_wEpoch_EN) rg_wEpoch <= `BSV_ASSIGNMENT_DELAY rg_wEpoch_D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    rg_action = 1'h0;
    rg_eEpoch = 1'h0;
    rg_prev = 62'h2AAAAAAAAAAAAAAA;
    rg_receiving_upper = 1'h0;
    rg_wEpoch = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_inst_response_put)
	begin
	  TASK_testplusargs___d342 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_inst_response_put)
	begin
	  TASK_testplusargs___d343 = $test$plusargs("mstage1");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_inst_response_put)
	begin
	  TASK_testplusargs___d344 = $test$plusargs("l3");
	  #0;
	end
    TASK_testplusargs_42_OR_TASK_testplusargs_43_A_ETC___d350 =
	(TASK_testplusargs___d342 ||
	 TASK_testplusargs___d343 && TASK_testplusargs___d344) &&
	inst_response_put[8];
    TASK_testplusargs_42_OR_TASK_testplusargs_43_A_ETC___d352 =
	(TASK_testplusargs___d342 ||
	 TASK_testplusargs___d343 && TASK_testplusargs___d344) &&
	!inst_response_put[8];
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_inst_response_put)
	begin
	  v__h5562 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_inst_response_put &&
	  (TASK_testplusargs___d342 ||
	   TASK_testplusargs___d343 && TASK_testplusargs___d344))
	$write("[%10d", v__h5562, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_inst_response_put &&
	  (TASK_testplusargs___d342 ||
	   TASK_testplusargs___d343 && TASK_testplusargs___d344))
	$write("[%2d]STAGE1: ", hartid);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_inst_response_put &&
	  (TASK_testplusargs___d342 ||
	   TASK_testplusargs___d343 && TASK_testplusargs___d344))
	$write("IMem_core_response { ", "word: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_inst_response_put &&
	  (TASK_testplusargs___d342 ||
	   TASK_testplusargs___d343 && TASK_testplusargs___d344))
	$write("'h%h", inst_response_put[40:9]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_inst_response_put &&
	  (TASK_testplusargs___d342 ||
	   TASK_testplusargs___d343 && TASK_testplusargs___d344))
	$write(", ", "trap: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_inst_response_put &&
	  TASK_testplusargs_42_OR_TASK_testplusargs_43_A_ETC___d350)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_inst_response_put &&
	  TASK_testplusargs_42_OR_TASK_testplusargs_43_A_ETC___d352)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_inst_response_put &&
	  (TASK_testplusargs___d342 ||
	   TASK_testplusargs___d343 && TASK_testplusargs___d344))
	$write(", ", "cause: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_inst_response_put &&
	  (TASK_testplusargs___d342 ||
	   TASK_testplusargs___d343 && TASK_testplusargs___d344))
	$write("'h%h", inst_response_put[7:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_inst_response_put &&
	  (TASK_testplusargs___d342 ||
	   TASK_testplusargs___d343 && TASK_testplusargs___d344))
	$write(", ", "epochs: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_inst_response_put &&
	  (TASK_testplusargs___d342 ||
	   TASK_testplusargs___d343 && TASK_testplusargs___d344))
	$write("'h%h", inst_response_put[1:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_inst_response_put &&
	  (TASK_testplusargs___d342 ||
	   TASK_testplusargs___d343 && TASK_testplusargs___d344))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  TASK_testplusargs___d24 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  TASK_testplusargs___d25 = $test$plusargs("mstage1");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  TASK_testplusargs___d26 = $test$plusargs("l1");
	  #0;
	end
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d37 =
	(TASK_testplusargs___d24 ||
	 TASK_testplusargs___d25 && TASK_testplusargs___d26) &&
	!rx_from_stage0_first_x[12];
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d40 =
	(TASK_testplusargs___d24 ||
	 TASK_testplusargs___d25 && TASK_testplusargs___d26) &&
	rx_from_stage0_first_x[12];
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d46 =
	(TASK_testplusargs___d24 ||
	 TASK_testplusargs___d25 && TASK_testplusargs___d26) &&
	!rx_from_stage0_first_x[9];
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d48 =
	(TASK_testplusargs___d24 ||
	 TASK_testplusargs___d25 && TASK_testplusargs___d26) &&
	rx_from_stage0_first_x[9];
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d52 =
	(TASK_testplusargs___d24 ||
	 TASK_testplusargs___d25 && TASK_testplusargs___d26) &&
	!rx_from_stage0_first_x[8];
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d54 =
	(TASK_testplusargs___d24 ||
	 TASK_testplusargs___d25 && TASK_testplusargs___d26) &&
	rx_from_stage0_first_x[8];
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  v__h1748 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d24 ||
	   TASK_testplusargs___d25 && TASK_testplusargs___d26))
	$write("[%10d", v__h1748, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d24 ||
	   TASK_testplusargs___d25 && TASK_testplusargs___d26))
	$write("[%2d]STAGE1 : Prediction: ", hartid);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d24 ||
	   TASK_testplusargs___d25 && TASK_testplusargs___d26))
	$write("Stage0PC { ", "address: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d24 ||
	   TASK_testplusargs___d25 && TASK_testplusargs___d26))
	$write("'h%h", rx_from_stage0_first_x[44:13]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d24 ||
	   TASK_testplusargs___d25 && TASK_testplusargs___d26))
	$write(", ", "discard: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d37)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d40)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d24 ||
	   TASK_testplusargs___d25 && TASK_testplusargs___d26))
	$write(", ", "btbresponse: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d24 ||
	   TASK_testplusargs___d25 && TASK_testplusargs___d26))
	$write("BTBResponse { ", "prediction: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d24 ||
	   TASK_testplusargs___d25 && TASK_testplusargs___d26))
	$write("'h%h", rx_from_stage0_first_x[11:10]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d24 ||
	   TASK_testplusargs___d25 && TASK_testplusargs___d26))
	$write(", ", "btbhit: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d46)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d48)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d24 ||
	   TASK_testplusargs___d25 && TASK_testplusargs___d26))
	$write(", ", "hi: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d52)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d54)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d24 ||
	   TASK_testplusargs___d25 && TASK_testplusargs___d26))
	$write(", ", "history: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d24 ||
	   TASK_testplusargs___d25 && TASK_testplusargs___d26))
	$write("'h%h", rx_from_stage0_first_x[7:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d24 ||
	   TASK_testplusargs___d25 && TASK_testplusargs___d26))
	$write(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d24 ||
	   TASK_testplusargs___d25 && TASK_testplusargs___d26))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  rg_action_7_OR_NOT_rg_prev_9_BITS_13_TO_12_0_E_ETC___d126)
	begin
	  TASK_testplusargs___d128 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  rg_action_7_OR_NOT_rg_prev_9_BITS_13_TO_12_0_E_ETC___d126)
	begin
	  TASK_testplusargs___d129 = $test$plusargs("mstage1");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  rg_action_7_OR_NOT_rg_prev_9_BITS_13_TO_12_0_E_ETC___d126)
	begin
	  TASK_testplusargs___d130 = $test$plusargs("l9");
	  #0;
	end
    NOT_IF_ff_memory_response_ff_i_notEmpty_THEN_f_ETC___d133 =
	IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[17:16] !=
	2'b11 &&
	(TASK_testplusargs___d128 ||
	 TASK_testplusargs___d129 && TASK_testplusargs___d130);
    rg_action_7_OR_NOT_rg_prev_9_BITS_13_TO_12_0_E_ETC___d135 =
	(rg_action ||
	 !rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) &&
	rx_from_stage0_first_x[12] &&
	csr_misa_c_c &&
	NOT_IF_ff_memory_response_ff_i_notEmpty_THEN_f_ETC___d133;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  rg_action_7_OR_NOT_rg_prev_9_BITS_13_TO_12_0_E_ETC___d126)
	begin
	  v__h3243 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  rg_action_7_OR_NOT_rg_prev_9_BITS_13_TO_12_0_E_ETC___d135)
	$write("[%10d", v__h3243, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  rg_action_7_OR_NOT_rg_prev_9_BITS_13_TO_12_0_E_ETC___d135)
	$write("imem_resp_word HIGH is %b",
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[31:16]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  rg_action_7_OR_NOT_rg_prev_9_BITS_13_TO_12_0_E_ETC___d135)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  rg_action_7_OR_NOT_rg_prev_9_BITS_13_TO_12_0_E_ETC___d139)
	begin
	  TASK_testplusargs___d141 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  rg_action_7_OR_NOT_rg_prev_9_BITS_13_TO_12_0_E_ETC___d139)
	begin
	  TASK_testplusargs___d142 = $test$plusargs("mstage1");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  rg_action_7_OR_NOT_rg_prev_9_BITS_13_TO_12_0_E_ETC___d139)
	begin
	  TASK_testplusargs___d143 = $test$plusargs("l9");
	  #0;
	end
    wr_csr_misa_c_wget__7_AND_TASK_testplusargs_41_ETC___d146 =
	csr_misa_c_c &&
	(TASK_testplusargs___d141 ||
	 TASK_testplusargs___d142 && TASK_testplusargs___d143);
    rg_action_7_OR_NOT_rg_prev_9_BITS_13_TO_12_0_E_ETC___d149 =
	(rg_action ||
	 !rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) &&
	!rx_from_stage0_first_x[12] &&
	IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[1:0] !=
	2'b11 &&
	wr_csr_misa_c_wget__7_AND_TASK_testplusargs_41_ETC___d146;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  rg_action_7_OR_NOT_rg_prev_9_BITS_13_TO_12_0_E_ETC___d139)
	begin
	  v__h3609 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  rg_action_7_OR_NOT_rg_prev_9_BITS_13_TO_12_0_E_ETC___d149)
	$write("[%10d", v__h3609, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  rg_action_7_OR_NOT_rg_prev_9_BITS_13_TO_12_0_E_ETC___d149)
	$write("imem_resp_word LOW is %b",
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[15:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  rg_action_7_OR_NOT_rg_prev_9_BITS_13_TO_12_0_E_ETC___d149)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  !rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89)
	begin
	  TASK_testplusargs___d153 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  !rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89)
	begin
	  TASK_testplusargs___d154 = $test$plusargs("mstage1");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  !rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89)
	begin
	  TASK_testplusargs___d155 = $test$plusargs("l1");
	  #0;
	end
    NOT_rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff__ETC___d158 =
	!rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	(TASK_testplusargs___d153 ||
	 TASK_testplusargs___d154 && TASK_testplusargs___d155);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  !rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89)
	begin
	  v__h2373 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  NOT_rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff__ETC___d158)
	$write("[%10d", v__h2373, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  NOT_rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff__ETC___d158)
	$write("[%2d]STAGE1 : Dropping Instruction. ExpEpoch:%b CurrEpoch:%b",
	       hartid,
	       y__h2056,
	       curr_epoch__h1651);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  NOT_rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff__ETC___d158)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  TASK_testplusargs___d188 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  TASK_testplusargs___d189 = $test$plusargs("mstage1");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  TASK_testplusargs___d190 = $test$plusargs("l9");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  v__h4384 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d188 ||
	   TASK_testplusargs___d189 && TASK_testplusargs___d190))
	$write("[%10d", v__h4384, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d188 ||
	   TASK_testplusargs___d189 && TASK_testplusargs___d190))
	$write("Invoking decompress, final inst is %b",
	       _theResult_____1__h4317);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d188 ||
	   TASK_testplusargs___d189 && TASK_testplusargs___d190))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  TASK_testplusargs___d210 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  TASK_testplusargs___d211 = $test$plusargs("mstage1");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  TASK_testplusargs___d212 = $test$plusargs("l0");
	  #0;
	end
    TASK_testplusargs_10_OR_TASK_testplusargs_11_A_ETC___d232 =
	(TASK_testplusargs___d210 ||
	 TASK_testplusargs___d211 && TASK_testplusargs___d212) &&
	IF_ff_memory_response_ff_i_notEmpty_THEN_NOT_f_ETC___d231;
    TASK_testplusargs_10_OR_TASK_testplusargs_11_A_ETC___d236 =
	(TASK_testplusargs___d210 ||
	 TASK_testplusargs___d211 && TASK_testplusargs___d212) &&
	IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d235;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  v__h4619 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d210 ||
	   TASK_testplusargs___d211 && TASK_testplusargs___d212))
	$write("[%10d", v__h4619, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d210 ||
	   TASK_testplusargs___d211 && TASK_testplusargs___d212))
	$write("[%2d]STAGE1 : PC:%h: ",
	       hartid,
	       IF_rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_m_ETC___d225);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d210 ||
	   TASK_testplusargs___d211 && TASK_testplusargs___d212))
	$write("IMem_core_response { ", "word: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d210 ||
	   TASK_testplusargs___d211 && TASK_testplusargs___d212))
	$write("'h%h",
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d210 ||
	   TASK_testplusargs___d211 && TASK_testplusargs___d212))
	$write(", ", "trap: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  TASK_testplusargs_10_OR_TASK_testplusargs_11_A_ETC___d232)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  TASK_testplusargs_10_OR_TASK_testplusargs_11_A_ETC___d236)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d210 ||
	   TASK_testplusargs___d211 && TASK_testplusargs___d212))
	$write(", ", "cause: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d210 ||
	   TASK_testplusargs___d211 && TASK_testplusargs___d212))
	$write("'h%h", cause__h4316);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d210 ||
	   TASK_testplusargs___d211 && TASK_testplusargs___d212))
	$write(", ", "epochs: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d210 ||
	   TASK_testplusargs___d211 && TASK_testplusargs___d212))
	$write("'h%h", y__h2056, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d210 ||
	   TASK_testplusargs___d211 && TASK_testplusargs___d212))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  TASK_testplusargs___d241 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  TASK_testplusargs___d242 = $test$plusargs("mstage1");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  TASK_testplusargs___d243 = $test$plusargs("l1");
	  #0;
	end
    TASK_testplusargs_41_OR_TASK_testplusargs_42_A_ETC___d247 =
	(TASK_testplusargs___d241 ||
	 TASK_testplusargs___d242 && TASK_testplusargs___d243) &&
	rg_action;
    TASK_testplusargs_41_OR_TASK_testplusargs_42_A_ETC___d248 =
	(TASK_testplusargs___d241 ||
	 TASK_testplusargs___d242 && TASK_testplusargs___d243) &&
	!rg_action;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  v__h4913 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d241 ||
	   TASK_testplusargs___d242 && TASK_testplusargs___d243))
	$write("[%10d", v__h4913, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d241 ||
	   TASK_testplusargs___d242 && TASK_testplusargs___d243))
	$write("[%2d]STAGE1 : rg_action: ", hartid);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  TASK_testplusargs_41_OR_TASK_testplusargs_42_A_ETC___d247)
	$write("None");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  TASK_testplusargs_41_OR_TASK_testplusargs_42_A_ETC___d248)
	$write("CheckPrev");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d241 ||
	   TASK_testplusargs___d242 && TASK_testplusargs___d243))
	$write(" misa[c]:%b discard:%b rg_receiving_upper:%b",
	       hartid,
	       csr_misa_c_c,
	       rx_from_stage0_first_x[12],
	       rg_receiving_upper);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d241 ||
	   TASK_testplusargs___d242 && TASK_testplusargs___d243))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d254)
	begin
	  TASK_testplusargs___d284 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d254)
	begin
	  TASK_testplusargs___d285 = $test$plusargs("mstage1");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d254)
	begin
	  TASK_testplusargs___d286 = $test$plusargs("l0");
	  #0;
	end
    TASK_testplusargs_84_OR_TASK_testplusargs_85_A_ETC___d293 =
	(TASK_testplusargs___d284 ||
	 TASK_testplusargs___d285 && TASK_testplusargs___d286) &&
	IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d292;
    TASK_testplusargs_84_OR_TASK_testplusargs_85_A_ETC___d297 =
	(TASK_testplusargs___d284 ||
	 TASK_testplusargs___d285 && TASK_testplusargs___d286) &&
	IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d296;
    TASK_testplusargs_84_OR_TASK_testplusargs_85_A_ETC___d303 =
	(TASK_testplusargs___d284 ||
	 TASK_testplusargs___d285 && TASK_testplusargs___d286) &&
	NOT_rg_receiving_upper_50_99_OR_IF_ff_memory_r_ETC___d302;
    TASK_testplusargs_84_OR_TASK_testplusargs_85_A_ETC___d305 =
	(TASK_testplusargs___d284 ||
	 TASK_testplusargs___d285 && TASK_testplusargs___d286) &&
	rg_receiving_upper &&
	IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d257;
    TASK_testplusargs_84_OR_TASK_testplusargs_85_A_ETC___d310 =
	(TASK_testplusargs___d284 ||
	 TASK_testplusargs___d285 && TASK_testplusargs___d286) &&
	IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d309;
    TASK_testplusargs_84_OR_TASK_testplusargs_85_A_ETC___d324 =
	(TASK_testplusargs___d284 ||
	 TASK_testplusargs___d285 && TASK_testplusargs___d286) &&
	IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d323;
    TASK_testplusargs_84_OR_TASK_testplusargs_85_A_ETC___d312 =
	(TASK_testplusargs___d284 ||
	 TASK_testplusargs___d285 && TASK_testplusargs___d286) &&
	IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d195;
    TASK_testplusargs_84_OR_TASK_testplusargs_85_A_ETC___d332 =
	(TASK_testplusargs___d284 ||
	 TASK_testplusargs___d285 && TASK_testplusargs___d286) &&
	IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d331;
    TASK_testplusargs_84_OR_TASK_testplusargs_85_A_ETC___d335 =
	(TASK_testplusargs___d284 ||
	 TASK_testplusargs___d285 && TASK_testplusargs___d286) &&
	IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d334;
    TASK_testplusargs_84_OR_TASK_testplusargs_85_A_ETC___d338 =
	(TASK_testplusargs___d284 ||
	 TASK_testplusargs___d285 && TASK_testplusargs___d286) &&
	IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d337;
    rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d289 =
	rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d254 &&
	(TASK_testplusargs___d284 ||
	 TASK_testplusargs___d285 && TASK_testplusargs___d286);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d254)
	begin
	  v__h5316 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d289)
	$write("[%10d", v__h5316, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d289)
	$write("[%2d]STAGE1 : Enquing: ", hartid);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d289)
	$write("PIPE1 { ", "program_counter: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d289)
	$write("'h%h",
	       IF_rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_m_ETC___d225);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d289)
	$write(", ", "instruction: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d289)
	$write("'h%h", _theResult_____1__h4317);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d289)
	$write(", ", "epochs: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d289)
	$write("'h%h", curr_epoch__h1651);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d289)
	$write(", ", "trap: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d254 &&
	  TASK_testplusargs_84_OR_TASK_testplusargs_85_A_ETC___d293)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d254 &&
	  TASK_testplusargs_84_OR_TASK_testplusargs_85_A_ETC___d297)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d289)
	$write(", ", "cause: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d289)
	$write("'h%h", cause__h4316);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d289)
	$write(", ", "upper_err: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d254 &&
	  TASK_testplusargs_84_OR_TASK_testplusargs_85_A_ETC___d303)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d254 &&
	  TASK_testplusargs_84_OR_TASK_testplusargs_85_A_ETC___d305)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d289)
	$write(", ", "compressed: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d254 &&
	  TASK_testplusargs_84_OR_TASK_testplusargs_85_A_ETC___d310)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d254 &&
	  TASK_testplusargs_84_OR_TASK_testplusargs_85_A_ETC___d312)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d289)
	$write(", ", "btbresponse: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d289)
	$write("BTBResponse { ", "prediction: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d289)
	$write("'h%h", x1_avValue_fst_prediction__h5182);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d289)
	$write(", ", "btbhit: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d254 &&
	  TASK_testplusargs_84_OR_TASK_testplusargs_85_A_ETC___d324)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d254 &&
	  TASK_testplusargs_84_OR_TASK_testplusargs_85_A_ETC___d332)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d289)
	$write(", ", "hi: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d254 &&
	  TASK_testplusargs_84_OR_TASK_testplusargs_85_A_ETC___d335)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d254 &&
	  TASK_testplusargs_84_OR_TASK_testplusargs_85_A_ETC___d338)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d289)
	$write(", ", "history: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d289)
	$write("'h%h", x1_avValue_fst_history__h5185, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d289)
	$write(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d289)
	$write("\n");
  end
  // synopsys translate_on
endmodule  // mkstage1

