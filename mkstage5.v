//
// Generated by Bluespec Compiler, version 2021.07-3-g8227dc97 (build 8227dc97)
//
// On Fri Sep  3 12:09:24 PDT 2021
//
//
// Ports:
// Name                         I/O  size props
// rx_in_deq_ena                  O     1
// rx_inst_deq_ena                O     1
// commit_rd                      O    39
// RDY_commit_rd                  O     1 const
// flush_fst                      O     1
// RDY_flush_fst                  O     1 const
// flush_snd_fst                  O    32
// RDY_flush_snd_fst              O     1 const
// flush_snd_snd                  O     1
// RDY_flush_snd_snd              O     1 const
// mv_csrs_to_decode              O   101
// RDY_mv_csrs_to_decode          O     1 const
// RDY_ma_clint_msip              O     1 const
// RDY_ma_clint_mtip              O     1 const
// RDY_ma_clint_mtime             O     1 const
// dump_get                       O   104 reg
// RDY_dump_get                   O     1 reg
// RDY_ma_set_meip                O     1 const
// mv_csr_misa_c                  O     1 reg
// RDY_mv_csr_misa_c              O     1 const
// initiate_store_fst             O     1
// RDY_initiate_store_fst         O     1 const
// initiate_store_snd             O     1
// RDY_initiate_store_snd         O     1 const
// RDY_write_resp                 O     1 const
// RDY_ma_cache_ready             O     1 const
// mv_cacheenable                 O     3 reg
// RDY_mv_cacheenable             O     1 const
// mv_curr_priv                   O     2 reg
// RDY_mv_curr_priv               O     1 const
// mv_csr_mstatus                 O    32
// RDY_mv_csr_mstatus             O     1 const
// mv_resume_wfi                  O     1
// RDY_mv_resume_wfi              O     1 const
// mv_pmp_cfg                     O    32 reg
// RDY_mv_pmp_cfg                 O     1 const
// mv_pmp_addr                    O   116 reg
// RDY_mv_pmp_addr                O     1 const
// RDY_ma_events_grp4             O     1 const
// RDY_ma_events_grp5             O     1 const
// RDY_ma_events_grp6             O     1 const
// RDY_ma_events_grp7             O     1 const
// mv_count_exceptions            O     1
// RDY_mv_count_exceptions        O     1 const
// mv_count_interrupts            O     1
// RDY_mv_count_interrupts        O     1 const
// mv_count_csrops                O     1
// RDY_mv_count_csrops            O     1 const
// CLK                            I     1 clock
// RST_N                          I     1 reset
// rx_in_notEmpty_b               I     1 unused
// rx_in_first_deq_rdy_b          I     1
// rx_in_first_x                  I    73
// rx_inst_notEmpty_b             I     1 unused
// rx_inst_first_deq_rdy_b        I     1
// rx_inst_first_x                I    64
// ma_clint_msip_intrpt           I     1 reg
// ma_clint_mtip_intrpt           I     1 reg
// ma_clint_mtime_c_mtime         I    64 reg
// ma_set_meip_ex_i               I     1 reg
// write_resp_r                   I    34
// store_is_cached_c              I     1
// ma_cache_ready_r               I     1
// ma_events_grp4_e               I    30
// ma_events_grp5_e               I    30
// ma_events_grp6_e               I    30
// ma_events_grp7_e               I    30
// EN_ma_clint_msip               I     1
// EN_ma_clint_mtip               I     1
// EN_ma_clint_mtime              I     1
// EN_ma_set_meip                 I     1
// EN_write_resp                  I     1
// EN_ma_cache_ready              I     1
// EN_ma_events_grp4              I     1
// EN_ma_events_grp5              I     1
// EN_ma_events_grp6              I     1
// EN_ma_events_grp7              I     1
// EN_dump_get                    I     1
//
// Combinational paths from inputs to outputs:
//   (rx_in_first_deq_rdy_b,
//    rx_in_first_x,
//    rx_inst_first_deq_rdy_b,
//    write_resp_r,
//    store_is_cached_c,
//    ma_cache_ready_r,
//    EN_write_resp,
//    EN_ma_cache_ready,
//    EN_dump_get) -> rx_in_deq_ena
//   (rx_in_first_deq_rdy_b,
//    rx_in_first_x,
//    rx_inst_first_deq_rdy_b,
//    write_resp_r,
//    store_is_cached_c,
//    ma_cache_ready_r,
//    EN_write_resp,
//    EN_ma_cache_ready,
//    EN_dump_get) -> rx_inst_deq_ena
//   (rx_in_first_deq_rdy_b,
//    rx_in_first_x,
//    rx_inst_first_deq_rdy_b,
//    write_resp_r,
//    store_is_cached_c,
//    ma_cache_ready_r,
//    EN_write_resp,
//    EN_ma_cache_ready,
//    EN_dump_get) -> commit_rd
//   (rx_in_first_deq_rdy_b,
//    rx_in_first_x,
//    rx_inst_first_deq_rdy_b,
//    write_resp_r,
//    EN_write_resp,
//    EN_dump_get) -> flush_fst
//   (rx_in_first_deq_rdy_b,
//    rx_in_first_x,
//    rx_inst_first_deq_rdy_b,
//    write_resp_r,
//    EN_write_resp,
//    EN_dump_get) -> flush_snd_fst
//   (rx_in_first_deq_rdy_b,
//    rx_in_first_x,
//    rx_inst_first_deq_rdy_b,
//    write_resp_r,
//    EN_write_resp,
//    EN_dump_get) -> flush_snd_snd
//   (rx_in_first_deq_rdy_b,
//    rx_in_first_x,
//    rx_inst_first_deq_rdy_b,
//    ma_cache_ready_r,
//    EN_ma_cache_ready,
//    EN_dump_get) -> initiate_store_fst
//   (rx_in_first_deq_rdy_b,
//    rx_in_first_x,
//    rx_inst_first_deq_rdy_b,
//    ma_cache_ready_r,
//    EN_ma_cache_ready,
//    EN_dump_get) -> initiate_store_snd
//   (rx_in_first_deq_rdy_b,
//    rx_in_first_x,
//    rx_inst_first_deq_rdy_b,
//    EN_dump_get) -> mv_count_exceptions
//   (rx_in_first_deq_rdy_b,
//    rx_in_first_x,
//    rx_inst_first_deq_rdy_b,
//    EN_dump_get) -> mv_count_interrupts
//   (rx_in_first_deq_rdy_b,
//    rx_in_first_x,
//    rx_inst_first_deq_rdy_b,
//    EN_dump_get) -> mv_count_csrops
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkstage5(CLK,
		RST_N,

		rx_in_notEmpty_b,

		rx_in_first_deq_rdy_b,

		rx_in_first_x,

		rx_in_deq_ena,

		rx_inst_notEmpty_b,

		rx_inst_first_deq_rdy_b,

		rx_inst_first_x,

		rx_inst_deq_ena,

		commit_rd,
		RDY_commit_rd,

		flush_fst,
		RDY_flush_fst,

		flush_snd_fst,
		RDY_flush_snd_fst,

		flush_snd_snd,
		RDY_flush_snd_snd,

		mv_csrs_to_decode,
		RDY_mv_csrs_to_decode,

		ma_clint_msip_intrpt,
		EN_ma_clint_msip,
		RDY_ma_clint_msip,

		ma_clint_mtip_intrpt,
		EN_ma_clint_mtip,
		RDY_ma_clint_mtip,

		ma_clint_mtime_c_mtime,
		EN_ma_clint_mtime,
		RDY_ma_clint_mtime,

		EN_dump_get,
		dump_get,
		RDY_dump_get,

		ma_set_meip_ex_i,
		EN_ma_set_meip,
		RDY_ma_set_meip,

		mv_csr_misa_c,
		RDY_mv_csr_misa_c,

		initiate_store_fst,
		RDY_initiate_store_fst,

		initiate_store_snd,
		RDY_initiate_store_snd,

		write_resp_r,
		EN_write_resp,
		RDY_write_resp,

		store_is_cached_c,

		ma_cache_ready_r,
		EN_ma_cache_ready,
		RDY_ma_cache_ready,

		mv_cacheenable,
		RDY_mv_cacheenable,

		mv_curr_priv,
		RDY_mv_curr_priv,

		mv_csr_mstatus,
		RDY_mv_csr_mstatus,

		mv_resume_wfi,
		RDY_mv_resume_wfi,

		mv_pmp_cfg,
		RDY_mv_pmp_cfg,

		mv_pmp_addr,
		RDY_mv_pmp_addr,

		ma_events_grp4_e,
		EN_ma_events_grp4,
		RDY_ma_events_grp4,

		ma_events_grp5_e,
		EN_ma_events_grp5,
		RDY_ma_events_grp5,

		ma_events_grp6_e,
		EN_ma_events_grp6,
		RDY_ma_events_grp6,

		ma_events_grp7_e,
		EN_ma_events_grp7,
		RDY_ma_events_grp7,

		mv_count_exceptions,
		RDY_mv_count_exceptions,

		mv_count_interrupts,
		RDY_mv_count_interrupts,

		mv_count_csrops,
		RDY_mv_count_csrops);
  parameter [31 : 0] hartid = 32'b0;
  input  CLK;
  input  RST_N;

  // action method rx_in_notEmpty
  input  rx_in_notEmpty_b;

  // action method rx_in_first_deq_rdy
  input  rx_in_first_deq_rdy_b;

  // action method rx_in_first
  input  [72 : 0] rx_in_first_x;

  // value method rx_in_deq_ena
  output rx_in_deq_ena;

  // action method rx_inst_notEmpty
  input  rx_inst_notEmpty_b;

  // action method rx_inst_first_deq_rdy
  input  rx_inst_first_deq_rdy_b;

  // action method rx_inst_first
  input  [63 : 0] rx_inst_first_x;

  // value method rx_inst_deq_ena
  output rx_inst_deq_ena;

  // value method commit_rd
  output [38 : 0] commit_rd;
  output RDY_commit_rd;

  // value method flush_fst
  output flush_fst;
  output RDY_flush_fst;

  // value method flush_snd_fst
  output [31 : 0] flush_snd_fst;
  output RDY_flush_snd_fst;

  // value method flush_snd_snd
  output flush_snd_snd;
  output RDY_flush_snd_snd;

  // value method mv_csrs_to_decode
  output [100 : 0] mv_csrs_to_decode;
  output RDY_mv_csrs_to_decode;

  // action method ma_clint_msip
  input  ma_clint_msip_intrpt;
  input  EN_ma_clint_msip;
  output RDY_ma_clint_msip;

  // action method ma_clint_mtip
  input  ma_clint_mtip_intrpt;
  input  EN_ma_clint_mtip;
  output RDY_ma_clint_mtip;

  // action method ma_clint_mtime
  input  [63 : 0] ma_clint_mtime_c_mtime;
  input  EN_ma_clint_mtime;
  output RDY_ma_clint_mtime;

  // actionvalue method dump_get
  input  EN_dump_get;
  output [103 : 0] dump_get;
  output RDY_dump_get;

  // action method ma_set_meip
  input  ma_set_meip_ex_i;
  input  EN_ma_set_meip;
  output RDY_ma_set_meip;

  // value method mv_csr_misa_c
  output mv_csr_misa_c;
  output RDY_mv_csr_misa_c;

  // value method initiate_store_fst
  output initiate_store_fst;
  output RDY_initiate_store_fst;

  // value method initiate_store_snd
  output initiate_store_snd;
  output RDY_initiate_store_snd;

  // action method write_resp
  input  [33 : 0] write_resp_r;
  input  EN_write_resp;
  output RDY_write_resp;

  // action method store_is_cached
  input  store_is_cached_c;

  // action method ma_cache_ready
  input  ma_cache_ready_r;
  input  EN_ma_cache_ready;
  output RDY_ma_cache_ready;

  // value method mv_cacheenable
  output [2 : 0] mv_cacheenable;
  output RDY_mv_cacheenable;

  // value method mv_curr_priv
  output [1 : 0] mv_curr_priv;
  output RDY_mv_curr_priv;

  // value method mv_csr_mstatus
  output [31 : 0] mv_csr_mstatus;
  output RDY_mv_csr_mstatus;

  // value method mv_resume_wfi
  output mv_resume_wfi;
  output RDY_mv_resume_wfi;

  // value method mv_pmp_cfg
  output [31 : 0] mv_pmp_cfg;
  output RDY_mv_pmp_cfg;

  // value method mv_pmp_addr
  output [115 : 0] mv_pmp_addr;
  output RDY_mv_pmp_addr;

  // action method ma_events_grp4
  input  [29 : 0] ma_events_grp4_e;
  input  EN_ma_events_grp4;
  output RDY_ma_events_grp4;

  // action method ma_events_grp5
  input  [29 : 0] ma_events_grp5_e;
  input  EN_ma_events_grp5;
  output RDY_ma_events_grp5;

  // action method ma_events_grp6
  input  [29 : 0] ma_events_grp6_e;
  input  EN_ma_events_grp6;
  output RDY_ma_events_grp6;

  // action method ma_events_grp7
  input  [29 : 0] ma_events_grp7_e;
  input  EN_ma_events_grp7;
  output RDY_ma_events_grp7;

  // value method mv_count_exceptions
  output mv_count_exceptions;
  output RDY_mv_count_exceptions;

  // value method mv_count_interrupts
  output mv_count_interrupts;
  output RDY_mv_count_interrupts;

  // value method mv_count_csrops
  output mv_count_csrops;
  output RDY_mv_count_csrops;

  // signals for module outputs
  wire [115 : 0] mv_pmp_addr;
  wire [103 : 0] dump_get;
  wire [100 : 0] mv_csrs_to_decode;
  wire [38 : 0] commit_rd;
  wire [31 : 0] flush_snd_fst, mv_csr_mstatus, mv_pmp_cfg;
  wire [2 : 0] mv_cacheenable;
  wire [1 : 0] mv_curr_priv;
  wire RDY_commit_rd,
       RDY_dump_get,
       RDY_flush_fst,
       RDY_flush_snd_fst,
       RDY_flush_snd_snd,
       RDY_initiate_store_fst,
       RDY_initiate_store_snd,
       RDY_ma_cache_ready,
       RDY_ma_clint_msip,
       RDY_ma_clint_mtime,
       RDY_ma_clint_mtip,
       RDY_ma_events_grp4,
       RDY_ma_events_grp5,
       RDY_ma_events_grp6,
       RDY_ma_events_grp7,
       RDY_ma_set_meip,
       RDY_mv_cacheenable,
       RDY_mv_count_csrops,
       RDY_mv_count_exceptions,
       RDY_mv_count_interrupts,
       RDY_mv_csr_misa_c,
       RDY_mv_csr_mstatus,
       RDY_mv_csrs_to_decode,
       RDY_mv_curr_priv,
       RDY_mv_pmp_addr,
       RDY_mv_pmp_cfg,
       RDY_mv_resume_wfi,
       RDY_write_resp,
       flush_fst,
       flush_snd_snd,
       initiate_store_fst,
       initiate_store_snd,
       mv_count_csrops,
       mv_count_exceptions,
       mv_count_interrupts,
       mv_csr_misa_c,
       mv_resume_wfi,
       rx_in_deq_ena,
       rx_inst_deq_ena;

  // inlined wires
  wire [38 : 0] wr_commit_wget;
  wire [33 : 0] wr_flush_wget;
  wire [1 : 0] wr_initiate_store_wget;
  wire rx_w_ena_whas,
       wr_commit_whas,
       wr_count_csrops_whas,
       wr_count_exceptions_whas,
       wr_count_interrupts_whas,
       wr_flush_whas,
       wr_initiate_store_whas;

  // register rg_epoch
  reg rg_epoch;
  wire rg_epoch_D_IN, rg_epoch_EN;

  // register rg_store_initiated
  reg rg_store_initiated;
  wire rg_store_initiated_D_IN, rg_store_initiated_EN;

  // ports of submodule csr
  wire [115 : 0] csr_mv_pmp_addr;
  wire [100 : 0] csr_mv_csrs_to_decode;
  wire [63 : 0] csr_ma_clint_mtime_c_mtime;
  wire [32 : 0] csr_mv_resp_to_core, csr_system_instruction;
  wire [31 : 0] csr_mv_csr_mstatus,
		csr_mv_pmp_cfg,
		csr_system_instruction_op1,
		csr_take_trap,
		csr_take_trap_badaddr,
		csr_take_trap_pc;
  wire [29 : 0] csr_ma_events_grp4_e,
		csr_ma_events_grp5_e,
		csr_ma_events_grp6_e,
		csr_ma_events_grp7_e;
  wire [11 : 0] csr_system_instruction_csr_address;
  wire [5 : 0] csr_take_trap_type_cause;
  wire [4 : 0] csr_ma_update_fflags_flags;
  wire [2 : 0] csr_mv_cacheenable, csr_system_instruction_funct3;
  wire [1 : 0] csr_mv_curr_priv, csr_system_instruction_lpc;
  wire csr_EN_ma_clint_msip,
       csr_EN_ma_clint_mtime,
       csr_EN_ma_clint_mtip,
       csr_EN_ma_events_grp4,
       csr_EN_ma_events_grp5,
       csr_EN_ma_events_grp6,
       csr_EN_ma_events_grp7,
       csr_EN_ma_incr_minstret,
       csr_EN_ma_set_meip,
       csr_EN_ma_update_fflags,
       csr_EN_system_instruction,
       csr_EN_take_trap,
       csr_RDY_mv_csrs_to_decode,
       csr_RDY_system_instruction,
       csr_RDY_take_trap,
       csr_ma_clint_msip_intrpt,
       csr_ma_clint_mtip_intrpt,
       csr_ma_set_meip_ex_i,
       csr_mv_csr_misa_c,
       csr_mv_resume_wfi;

  // ports of submodule dump_ff
  wire [103 : 0] dump_ff_D_IN, dump_ff_D_OUT;
  wire dump_ff_CLR, dump_ff_DEQ, dump_ff_EMPTY_N, dump_ff_ENQ, dump_ff_FULL_N;

  // rule scheduling signals
  wire CAN_FIRE_RL_increment_instruction_counter,
       CAN_FIRE_RL_instruction_commit,
       CAN_FIRE_dump_get,
       CAN_FIRE_ma_cache_ready,
       CAN_FIRE_ma_clint_msip,
       CAN_FIRE_ma_clint_mtime,
       CAN_FIRE_ma_clint_mtip,
       CAN_FIRE_ma_events_grp4,
       CAN_FIRE_ma_events_grp5,
       CAN_FIRE_ma_events_grp6,
       CAN_FIRE_ma_events_grp7,
       CAN_FIRE_ma_set_meip,
       CAN_FIRE_rx_in_first,
       CAN_FIRE_rx_in_first_deq_rdy,
       CAN_FIRE_rx_in_notEmpty,
       CAN_FIRE_rx_inst_first,
       CAN_FIRE_rx_inst_first_deq_rdy,
       CAN_FIRE_rx_inst_notEmpty,
       CAN_FIRE_store_is_cached,
       CAN_FIRE_write_resp,
       WILL_FIRE_RL_increment_instruction_counter,
       WILL_FIRE_RL_instruction_commit,
       WILL_FIRE_dump_get,
       WILL_FIRE_ma_cache_ready,
       WILL_FIRE_ma_clint_msip,
       WILL_FIRE_ma_clint_mtime,
       WILL_FIRE_ma_clint_mtip,
       WILL_FIRE_ma_events_grp4,
       WILL_FIRE_ma_events_grp5,
       WILL_FIRE_ma_events_grp6,
       WILL_FIRE_ma_events_grp7,
       WILL_FIRE_ma_set_meip,
       WILL_FIRE_rx_in_first,
       WILL_FIRE_rx_in_first_deq_rdy,
       WILL_FIRE_rx_in_notEmpty,
       WILL_FIRE_rx_inst_first,
       WILL_FIRE_rx_inst_first_deq_rdy,
       WILL_FIRE_rx_inst_notEmpty,
       WILL_FIRE_store_is_cached,
       WILL_FIRE_write_resp;

  // declarations used by system tasks
  // synopsys translate_off
  reg TASK_testplusargs___d12;
  reg TASK_testplusargs___d13;
  reg TASK_testplusargs___d14;
  reg [63 : 0] v__h1757;
  reg TASK_testplusargs___d155;
  reg TASK_testplusargs___d156;
  reg TASK_testplusargs___d157;
  reg [63 : 0] v__h2817;
  reg TASK_testplusargs___d173;
  reg TASK_testplusargs___d174;
  reg TASK_testplusargs___d175;
  reg [63 : 0] v__h3164;
  reg TASK_testplusargs___d222;
  reg TASK_testplusargs___d223;
  reg TASK_testplusargs___d224;
  reg [63 : 0] v__h3365;
  reg TASK_testplusargs___d234;
  reg TASK_testplusargs___d235;
  reg TASK_testplusargs___d236;
  reg [63 : 0] v__h3563;
  reg TASK_testplusargs___d255;
  reg TASK_testplusargs___d256;
  reg TASK_testplusargs___d257;
  reg [63 : 0] v__h4275;
  reg TASK_testplusargs___d271;
  reg TASK_testplusargs___d272;
  reg TASK_testplusargs___d273;
  reg [63 : 0] v__h4686;
  reg TASK_testplusargs___d285;
  reg TASK_testplusargs___d286;
  reg TASK_testplusargs___d287;
  reg [63 : 0] v__h4038;
  reg TASK_testplusargs___d299;
  reg TASK_testplusargs___d300;
  reg TASK_testplusargs___d301;
  reg [63 : 0] v__h5371;
  reg TASK_testplusargs___d322;
  reg TASK_testplusargs___d323;
  reg TASK_testplusargs___d324;
  reg [63 : 0] v__h5928;
  reg IF_rx_w_data_whas__4_THEN_IF_rx_w_data_wget__5_ETC___d160;
  reg rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d178;
  reg NOT_wr_cache_ready_whas__5_16_OR_NOT_wr_cache__ETC___d227;
  reg NOT_rg_store_initiated_8_00_AND_wr_store_is_ca_ETC___d239;
  reg wr_cache_ready_whas__5_AND_wr_cache_ready_wget_ETC___d240;
  reg wr_store_response_whas__05_AND_wr_store_respon_ETC___d260;
  reg NOT_wr_store_response_whas__05_65_OR_NOT_wr_st_ETC___d276;
  reg NOT_rg_store_initiated_8_00_AND_TASK_testplusa_ETC___d290;
  reg wr_cache_ready_whas__5_AND_wr_cache_ready_wget_ETC___d292;
  reg rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d304;
  reg TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32;
  reg TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35;
  reg TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d38;
  reg TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d48;
  reg TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d76;
  reg TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d79;
  reg TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d81;
  reg TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d85;
  reg rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d162;
  reg rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d229;
  reg rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d242;
  reg rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d263;
  reg rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d279;
  reg rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d294;
  reg NOT_rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_ETC___d327;
  // synopsys translate_on

  // remaining internal signals
  reg [31 : 0] jump_address__h3056;
  wire [101 : 0] rxinst_w_data_wget__9_CONCAT_IF_rx_w_data_whas_ETC___d213;
  wire [31 : 0] x__h5187, x__h5754, x__h6059, y_avValue_snd_fst__h6033;
  wire [5 : 0] rx_in_first_x_BITS_70_TO_65__q1;
  wire IF_rx_w_data_whas__4_AND_rx_w_data_wget__5_BIT_ETC___d308,
       NOT_rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_ETC___d127,
       NOT_rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_ETC___d133,
       rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d124,
       rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d191,
       rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d233,
       rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d284,
       rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94,
       rg_store_initiated_8_AND_wr_store_response_wha_ETC___d144,
       rg_store_initiated_8_OR_NOT_wr_store_is_cached_ETC___d249,
       rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d120,
       rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d130,
       rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d189,
       rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d220,
       rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d253,
       rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d269,
       wr_cache_ready_whas__5_AND_wr_cache_ready_wget_ETC___d111,
       wr_cache_ready_whas__5_AND_wr_cache_ready_wget_ETC___d187,
       wr_cache_ready_whas__5_AND_wr_cache_ready_wget_ETC___d250;

  // action method rx_in_notEmpty
  assign CAN_FIRE_rx_in_notEmpty = 1'd1 ;
  assign WILL_FIRE_rx_in_notEmpty = 1'd1 ;

  // action method rx_in_first_deq_rdy
  assign CAN_FIRE_rx_in_first_deq_rdy = 1'd1 ;
  assign WILL_FIRE_rx_in_first_deq_rdy = 1'd1 ;

  // action method rx_in_first
  assign CAN_FIRE_rx_in_first = 1'd1 ;
  assign WILL_FIRE_rx_in_first = 1'd1 ;

  // value method rx_in_deq_ena
  assign rx_in_deq_ena = rx_w_ena_whas ;

  // action method rx_inst_notEmpty
  assign CAN_FIRE_rx_inst_notEmpty = 1'd1 ;
  assign WILL_FIRE_rx_inst_notEmpty = 1'd1 ;

  // action method rx_inst_first_deq_rdy
  assign CAN_FIRE_rx_inst_first_deq_rdy = 1'd1 ;
  assign WILL_FIRE_rx_inst_first_deq_rdy = 1'd1 ;

  // action method rx_inst_first
  assign CAN_FIRE_rx_inst_first = 1'd1 ;
  assign WILL_FIRE_rx_inst_first = 1'd1 ;

  // value method rx_inst_deq_ena
  assign rx_inst_deq_ena = rx_w_ena_whas ;

  // value method commit_rd
  assign commit_rd =
	     { wr_commit_whas && wr_commit_wget[38], wr_commit_wget[37:0] } ;
  assign RDY_commit_rd = 1'd1 ;

  // value method flush_fst
  assign flush_fst = wr_flush_whas && wr_flush_wget[33] ;
  assign RDY_flush_fst = 1'd1 ;

  // value method flush_snd_fst
  assign flush_snd_fst = wr_flush_wget[32:1] ;
  assign RDY_flush_snd_fst = 1'd1 ;

  // value method flush_snd_snd
  assign flush_snd_snd = wr_flush_whas && wr_flush_wget[0] ;
  assign RDY_flush_snd_snd = 1'd1 ;

  // value method mv_csrs_to_decode
  assign mv_csrs_to_decode = csr_mv_csrs_to_decode ;
  assign RDY_mv_csrs_to_decode = csr_RDY_mv_csrs_to_decode ;

  // action method ma_clint_msip
  assign RDY_ma_clint_msip = 1'd1 ;
  assign CAN_FIRE_ma_clint_msip = 1'd1 ;
  assign WILL_FIRE_ma_clint_msip = EN_ma_clint_msip ;

  // action method ma_clint_mtip
  assign RDY_ma_clint_mtip = 1'd1 ;
  assign CAN_FIRE_ma_clint_mtip = 1'd1 ;
  assign WILL_FIRE_ma_clint_mtip = EN_ma_clint_mtip ;

  // action method ma_clint_mtime
  assign RDY_ma_clint_mtime = 1'd1 ;
  assign CAN_FIRE_ma_clint_mtime = 1'd1 ;
  assign WILL_FIRE_ma_clint_mtime = EN_ma_clint_mtime ;

  // actionvalue method dump_get
  assign dump_get = dump_ff_D_OUT ;
  assign RDY_dump_get = dump_ff_EMPTY_N ;
  assign CAN_FIRE_dump_get = dump_ff_EMPTY_N ;
  assign WILL_FIRE_dump_get = EN_dump_get ;

  // action method ma_set_meip
  assign RDY_ma_set_meip = 1'd1 ;
  assign CAN_FIRE_ma_set_meip = 1'd1 ;
  assign WILL_FIRE_ma_set_meip = EN_ma_set_meip ;

  // value method mv_csr_misa_c
  assign mv_csr_misa_c = csr_mv_csr_misa_c ;
  assign RDY_mv_csr_misa_c = 1'd1 ;

  // value method initiate_store_fst
  assign initiate_store_fst =
	     wr_initiate_store_whas && wr_initiate_store_wget[1] ;
  assign RDY_initiate_store_fst = 1'd1 ;

  // value method initiate_store_snd
  assign initiate_store_snd =
	     wr_initiate_store_whas && wr_initiate_store_wget[0] ;
  assign RDY_initiate_store_snd = 1'd1 ;

  // action method write_resp
  assign RDY_write_resp = 1'd1 ;
  assign CAN_FIRE_write_resp = 1'd1 ;
  assign WILL_FIRE_write_resp = EN_write_resp ;

  // action method store_is_cached
  assign CAN_FIRE_store_is_cached = 1'd1 ;
  assign WILL_FIRE_store_is_cached = 1'd1 ;

  // action method ma_cache_ready
  assign RDY_ma_cache_ready = 1'd1 ;
  assign CAN_FIRE_ma_cache_ready = 1'd1 ;
  assign WILL_FIRE_ma_cache_ready = EN_ma_cache_ready ;

  // value method mv_cacheenable
  assign mv_cacheenable = csr_mv_cacheenable ;
  assign RDY_mv_cacheenable = 1'd1 ;

  // value method mv_curr_priv
  assign mv_curr_priv = csr_mv_curr_priv ;
  assign RDY_mv_curr_priv = 1'd1 ;

  // value method mv_csr_mstatus
  assign mv_csr_mstatus = csr_mv_csr_mstatus ;
  assign RDY_mv_csr_mstatus = 1'd1 ;

  // value method mv_resume_wfi
  assign mv_resume_wfi = csr_mv_resume_wfi ;
  assign RDY_mv_resume_wfi = 1'd1 ;

  // value method mv_pmp_cfg
  assign mv_pmp_cfg = csr_mv_pmp_cfg ;
  assign RDY_mv_pmp_cfg = 1'd1 ;

  // value method mv_pmp_addr
  assign mv_pmp_addr = csr_mv_pmp_addr ;
  assign RDY_mv_pmp_addr = 1'd1 ;

  // action method ma_events_grp4
  assign RDY_ma_events_grp4 = 1'd1 ;
  assign CAN_FIRE_ma_events_grp4 = 1'd1 ;
  assign WILL_FIRE_ma_events_grp4 = EN_ma_events_grp4 ;

  // action method ma_events_grp5
  assign RDY_ma_events_grp5 = 1'd1 ;
  assign CAN_FIRE_ma_events_grp5 = 1'd1 ;
  assign WILL_FIRE_ma_events_grp5 = EN_ma_events_grp5 ;

  // action method ma_events_grp6
  assign RDY_ma_events_grp6 = 1'd1 ;
  assign CAN_FIRE_ma_events_grp6 = 1'd1 ;
  assign WILL_FIRE_ma_events_grp6 = EN_ma_events_grp6 ;

  // action method ma_events_grp7
  assign RDY_ma_events_grp7 = 1'd1 ;
  assign CAN_FIRE_ma_events_grp7 = 1'd1 ;
  assign WILL_FIRE_ma_events_grp7 = EN_ma_events_grp7 ;

  // value method mv_count_exceptions
  assign mv_count_exceptions = wr_count_exceptions_whas ;
  assign RDY_mv_count_exceptions = 1'd1 ;

  // value method mv_count_interrupts
  assign mv_count_interrupts = wr_count_interrupts_whas ;
  assign RDY_mv_count_interrupts = 1'd1 ;

  // value method mv_count_csrops
  assign mv_count_csrops = wr_count_csrops_whas ;
  assign RDY_mv_count_csrops = 1'd1 ;

  // submodule csr
  mkcsr #(.hartid(hartid)) csr(.CLK(CLK),
			       .RST_N(RST_N),
			       .ma_clint_msip_intrpt(csr_ma_clint_msip_intrpt),
			       .ma_clint_mtime_c_mtime(csr_ma_clint_mtime_c_mtime),
			       .ma_clint_mtip_intrpt(csr_ma_clint_mtip_intrpt),
			       .ma_events_grp4_e(csr_ma_events_grp4_e),
			       .ma_events_grp5_e(csr_ma_events_grp5_e),
			       .ma_events_grp6_e(csr_ma_events_grp6_e),
			       .ma_events_grp7_e(csr_ma_events_grp7_e),
			       .ma_set_meip_ex_i(csr_ma_set_meip_ex_i),
			       .ma_update_fflags_flags(csr_ma_update_fflags_flags),
			       .system_instruction_csr_address(csr_system_instruction_csr_address),
			       .system_instruction_funct3(csr_system_instruction_funct3),
			       .system_instruction_lpc(csr_system_instruction_lpc),
			       .system_instruction_op1(csr_system_instruction_op1),
			       .take_trap_badaddr(csr_take_trap_badaddr),
			       .take_trap_pc(csr_take_trap_pc),
			       .take_trap_type_cause(csr_take_trap_type_cause),
			       .EN_system_instruction(csr_EN_system_instruction),
			       .EN_take_trap(csr_EN_take_trap),
			       .EN_ma_clint_msip(csr_EN_ma_clint_msip),
			       .EN_ma_clint_mtip(csr_EN_ma_clint_mtip),
			       .EN_ma_clint_mtime(csr_EN_ma_clint_mtime),
			       .EN_ma_incr_minstret(csr_EN_ma_incr_minstret),
			       .EN_ma_update_fflags(csr_EN_ma_update_fflags),
			       .EN_ma_set_meip(csr_EN_ma_set_meip),
			       .EN_ma_events_grp4(csr_EN_ma_events_grp4),
			       .EN_ma_events_grp5(csr_EN_ma_events_grp5),
			       .EN_ma_events_grp6(csr_EN_ma_events_grp6),
			       .EN_ma_events_grp7(csr_EN_ma_events_grp7),
			       .system_instruction(csr_system_instruction),
			       .RDY_system_instruction(csr_RDY_system_instruction),
			       .mv_resp_to_core(csr_mv_resp_to_core),
			       .RDY_mv_resp_to_core(),
			       .mv_csrs_to_decode(csr_mv_csrs_to_decode),
			       .RDY_mv_csrs_to_decode(csr_RDY_mv_csrs_to_decode),
			       .mv_resume_wfi(csr_mv_resume_wfi),
			       .RDY_mv_resume_wfi(),
			       .take_trap(csr_take_trap),
			       .RDY_take_trap(csr_RDY_take_trap),
			       .RDY_ma_clint_msip(),
			       .RDY_ma_clint_mtip(),
			       .RDY_ma_clint_mtime(),
			       .RDY_ma_incr_minstret(),
			       .RDY_ma_update_fflags(),
			       .RDY_ma_set_meip(),
			       .mv_csr_misa_c(csr_mv_csr_misa_c),
			       .RDY_mv_csr_misa_c(),
			       .mv_cacheenable(csr_mv_cacheenable),
			       .RDY_mv_cacheenable(),
			       .mv_curr_priv(csr_mv_curr_priv),
			       .RDY_mv_curr_priv(),
			       .mv_csr_mstatus(csr_mv_csr_mstatus),
			       .RDY_mv_csr_mstatus(),
			       .mv_pmp_cfg(csr_mv_pmp_cfg),
			       .RDY_mv_pmp_cfg(),
			       .mv_pmp_addr(csr_mv_pmp_addr),
			       .RDY_mv_pmp_addr(),
			       .RDY_ma_events_grp4(),
			       .RDY_ma_events_grp5(),
			       .RDY_ma_events_grp6(),
			       .RDY_ma_events_grp7());

  // submodule dump_ff
  FIFOL1 #(.width(32'd104)) dump_ff(.RST(RST_N),
				    .CLK(CLK),
				    .D_IN(dump_ff_D_IN),
				    .ENQ(dump_ff_ENQ),
				    .DEQ(dump_ff_DEQ),
				    .CLR(dump_ff_CLR),
				    .D_OUT(dump_ff_D_OUT),
				    .FULL_N(dump_ff_FULL_N),
				    .EMPTY_N(dump_ff_EMPTY_N));

  // rule RL_instruction_commit
  assign CAN_FIRE_RL_instruction_commit =
	     rx_in_first_deq_rdy_b && rx_inst_first_deq_rdy_b &&
	     csr_RDY_system_instruction &&
	     csr_RDY_mv_csrs_to_decode &&
	     dump_ff_FULL_N &&
	     csr_RDY_take_trap ;
  assign WILL_FIRE_RL_instruction_commit = CAN_FIRE_RL_instruction_commit ;

  // rule RL_increment_instruction_counter
  assign CAN_FIRE_RL_increment_instruction_counter = wr_commit_whas ;
  assign WILL_FIRE_RL_increment_instruction_counter = wr_commit_whas ;

  // inlined wires
  assign rx_w_ena_whas =
	     WILL_FIRE_RL_instruction_commit &&
	     (rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d124 ||
	      NOT_rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_ETC___d127) ;
  assign wr_commit_wget =
	     (rx_in_first_x[72:71] == 2'd1) ?
	       39'h4000000000 :
	       { 1'd1,
		 (rx_in_first_x[72:71] == 2'd3) ?
		   { rx_in_first_x[5:1], csr_mv_resp_to_core[31:0], 1'd0 } :
		   { rx_in_first_x[11:7],
		     rx_in_first_x[43:12],
		     rx_in_first_x[1] } } ;
  assign wr_commit_whas =
	     WILL_FIRE_RL_instruction_commit &&
	     rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d191 ;
  assign wr_flush_wget =
	     { rx_in_first_x[72:71] == 2'd0 ||
	       IF_rx_w_data_whas__4_AND_rx_w_data_wget__5_BIT_ETC___d308,
	       x__h6059,
	       rx_in_first_x[72:71] == 2'd0 &&
	       rx_in_first_x[70:65] == 6'd24 } ;
  assign wr_flush_whas =
	     WILL_FIRE_RL_instruction_commit &&
	     rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 ;
  assign wr_count_exceptions_whas =
	     WILL_FIRE_RL_instruction_commit &&
	     rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	     rx_in_first_x[72:71] == 2'd0 &&
	     rx_in_first_x[70:65] != 6'd23 &&
	     rx_in_first_x[70:65] != 6'd24 &&
	     !rx_in_first_x_BITS_70_TO_65__q1[5] ;
  assign wr_count_interrupts_whas =
	     WILL_FIRE_RL_instruction_commit &&
	     rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	     rx_in_first_x[72:71] == 2'd0 &&
	     rx_in_first_x_BITS_70_TO_65__q1[5] ;
  assign wr_count_csrops_whas =
	     WILL_FIRE_RL_instruction_commit &&
	     rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	     rx_in_first_x[72:71] == 2'd3 &&
	     (csr_system_instruction[32] || csr_mv_resp_to_core[32]) ;
  assign wr_initiate_store_wget = { rg_epoch, 1'd1 } ;
  assign wr_initiate_store_whas =
	     WILL_FIRE_RL_instruction_commit &&
	     (rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	      rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d130 ||
	      NOT_rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_ETC___d133) ;

  // register rg_epoch
  assign rg_epoch_D_IN = ~rg_epoch ;
  assign rg_epoch_EN =
	     WILL_FIRE_RL_instruction_commit &&
	     rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	     (rx_in_first_x[72:71] == 2'd0 ||
	      IF_rx_w_data_whas__4_AND_rx_w_data_wget__5_BIT_ETC___d308) ;

  // register rg_store_initiated
  assign rg_store_initiated_D_IN = !rg_store_initiated ;
  assign rg_store_initiated_EN =
	     WILL_FIRE_RL_instruction_commit &&
	     rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	     rx_in_first_x[72:71] == 2'd1 &&
	     wr_cache_ready_whas__5_AND_wr_cache_ready_wget_ETC___d250 ;

  // submodule csr
  assign csr_ma_clint_msip_intrpt = ma_clint_msip_intrpt ;
  assign csr_ma_clint_mtime_c_mtime = ma_clint_mtime_c_mtime ;
  assign csr_ma_clint_mtip_intrpt = ma_clint_mtip_intrpt ;
  assign csr_ma_events_grp4_e = ma_events_grp4_e ;
  assign csr_ma_events_grp5_e = ma_events_grp5_e ;
  assign csr_ma_events_grp6_e = ma_events_grp6_e ;
  assign csr_ma_events_grp7_e = ma_events_grp7_e ;
  assign csr_ma_set_meip_ex_i = ma_set_meip_ex_i ;
  assign csr_ma_update_fflags_flags = rx_in_first_x[6:2] ;
  assign csr_system_instruction_csr_address = rx_in_first_x[20:9] ;
  assign csr_system_instruction_funct3 = rx_in_first_x[8:6] ;
  assign csr_system_instruction_lpc = rx_in_first_x[22:21] ;
  assign csr_system_instruction_op1 = rx_in_first_x[54:23] ;
  assign csr_take_trap_badaddr =
	     (rx_in_first_x[72:71] == 2'd0) ?
	       rx_in_first_x[64:33] :
	       write_resp_r[31:0] ;
  assign csr_take_trap_pc = rx_in_first_x[32:1] ;
  assign csr_take_trap_type_cause =
	     (rx_in_first_x[72:71] == 2'd0) ? rx_in_first_x[70:65] : 6'd7 ;
  assign csr_EN_system_instruction =
	     WILL_FIRE_RL_instruction_commit &&
	     rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	     rx_in_first_x[72:71] == 2'd3 ;
  assign csr_EN_take_trap =
	     WILL_FIRE_RL_instruction_commit &&
	     rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	     (rx_in_first_x[72:71] == 2'd0 && rx_in_first_x[70:65] != 6'd23 &&
	      rx_in_first_x[70:65] != 6'd24 ||
	      rx_in_first_x[72:71] == 2'd1 &&
	      rg_store_initiated_8_AND_wr_store_response_wha_ETC___d144) ;
  assign csr_EN_ma_clint_msip = EN_ma_clint_msip ;
  assign csr_EN_ma_clint_mtip = EN_ma_clint_mtip ;
  assign csr_EN_ma_clint_mtime = EN_ma_clint_mtime ;
  assign csr_EN_ma_incr_minstret = wr_commit_whas ;
  assign csr_EN_ma_update_fflags =
	     WILL_FIRE_RL_instruction_commit &&
	     rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	     rx_in_first_x[72:71] == 2'd2 ;
  assign csr_EN_ma_set_meip = EN_ma_set_meip ;
  assign csr_EN_ma_events_grp4 = EN_ma_events_grp4 ;
  assign csr_EN_ma_events_grp5 = EN_ma_events_grp5 ;
  assign csr_EN_ma_events_grp6 = EN_ma_events_grp6 ;
  assign csr_EN_ma_events_grp7 = EN_ma_events_grp7 ;

  // submodule dump_ff
  assign dump_ff_D_IN =
	     { csr_mv_csrs_to_decode[100:99],
	       (rx_in_first_x[72:71] == 2'd1) ?
		 { rx_in_first_x[32:1], rx_inst_first_x[31:0], 38'd0 } :
		 rxinst_w_data_wget__9_CONCAT_IF_rx_w_data_whas_ETC___d213 } ;
  assign dump_ff_ENQ = wr_commit_whas ;
  assign dump_ff_DEQ = EN_dump_get ;
  assign dump_ff_CLR = 1'b0 ;

  // remaining internal signals
  assign IF_rx_w_data_whas__4_AND_rx_w_data_wget__5_BIT_ETC___d308 =
	     (rx_in_first_x[72:71] == 2'd1) ?
	       rg_store_initiated_8_AND_wr_store_response_wha_ETC___d144 :
	       rx_in_first_x[72:71] == 2'd3 && csr_system_instruction[32] ;
  assign NOT_rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_ETC___d127 =
	     !rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	     (rx_in_first_x[72:71] != 2'd1 ||
	      EN_ma_cache_ready && ma_cache_ready_r) ;
  assign NOT_rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_ETC___d133 =
	     !rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	     rx_in_first_x[72:71] == 2'd1 &&
	     EN_ma_cache_ready &&
	     ma_cache_ready_r ;
  assign rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d124 =
	     rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	     (rx_in_first_x[72:71] == 2'd0 ||
	      rx_in_first_x[72:71] == 2'd1 &&
	      wr_cache_ready_whas__5_AND_wr_cache_ready_wget_ETC___d111 ||
	      rx_in_first_x[72:71] != 2'd1 &&
	      rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d120) ;
  assign rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d191 =
	     rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	     rx_in_first_x[72:71] != 2'd0 &&
	     rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d189 ;
  assign rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d233 =
	     rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	     rx_in_first_x[72:71] == 2'd1 &&
	     EN_ma_cache_ready &&
	     ma_cache_ready_r &&
	     !rg_store_initiated &&
	     store_is_cached_c ;
  assign rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d284 =
	     rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	     rx_in_first_x[72:71] == 2'd1 &&
	     EN_ma_cache_ready &&
	     ma_cache_ready_r &&
	     !store_is_cached_c &&
	     !rg_store_initiated ;
  assign rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 =
	     rg_epoch == rx_in_first_x[0] ;
  assign rg_store_initiated_8_AND_wr_store_response_wha_ETC___d144 =
	     rg_store_initiated && EN_write_resp && write_resp_r[33] &&
	     write_resp_r[32] ;
  assign rg_store_initiated_8_OR_NOT_wr_store_is_cached_ETC___d249 =
	     (rg_store_initiated || !store_is_cached_c) &&
	     (EN_write_resp && write_resp_r[33] || !rg_store_initiated) ;
  assign rx_in_first_x_BITS_70_TO_65__q1 = rx_in_first_x[70:65] ;
  assign rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d120 =
	     rx_in_first_x[72:71] == 2'd3 &&
	     (csr_system_instruction[32] || csr_mv_resp_to_core[32]) ||
	     rx_in_first_x[72:71] == 2'd2 ;
  assign rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d130 =
	     rx_in_first_x[72:71] == 2'd1 && EN_ma_cache_ready &&
	     ma_cache_ready_r &&
	     !rg_store_initiated ;
  assign rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d189 =
	     rx_in_first_x[72:71] == 2'd1 &&
	     wr_cache_ready_whas__5_AND_wr_cache_ready_wget_ETC___d187 ||
	     rx_in_first_x[72:71] != 2'd1 &&
	     rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d120 ;
  assign rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d220 =
	     rx_in_first_x[72:71] == 2'd1 &&
	     (!EN_ma_cache_ready || !ma_cache_ready_r) &&
	     !rg_store_initiated ;
  assign rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d253 =
	     rx_in_first_x[72:71] == 2'd1 && rg_store_initiated &&
	     EN_write_resp &&
	     write_resp_r[33] ;
  assign rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d269 =
	     rx_in_first_x[72:71] == 2'd1 && rg_store_initiated &&
	     (!EN_write_resp || !write_resp_r[33]) ;
  assign rxinst_w_data_wget__9_CONCAT_IF_rx_w_data_whas_ETC___d213 =
	     { rx_inst_first_x,
	       (rx_in_first_x[72:71] == 2'd3) ?
		 rx_in_first_x[5:1] :
		 rx_in_first_x[11:7],
	       (rx_in_first_x[72:71] == 2'd3) ? x__h5187 : x__h5754,
	       rx_in_first_x[72:71] != 2'd3 && rx_in_first_x[1] } ;
  assign wr_cache_ready_whas__5_AND_wr_cache_ready_wget_ETC___d111 =
	     (EN_ma_cache_ready && ma_cache_ready_r || rg_store_initiated) &&
	     (!rg_store_initiated && store_is_cached_c ||
	      rg_store_initiated && EN_write_resp && write_resp_r[33]) ;
  assign wr_cache_ready_whas__5_AND_wr_cache_ready_wget_ETC___d187 =
	     (EN_ma_cache_ready && ma_cache_ready_r || rg_store_initiated) &&
	     (!rg_store_initiated && store_is_cached_c ||
	      rg_store_initiated && EN_write_resp && write_resp_r[33] &&
	      !write_resp_r[32]) ;
  assign wr_cache_ready_whas__5_AND_wr_cache_ready_wget_ETC___d250 =
	     (EN_ma_cache_ready && ma_cache_ready_r || rg_store_initiated) &&
	     rg_store_initiated_8_OR_NOT_wr_store_is_cached_ETC___d249 ;
  assign x__h5187 =
	     (rx_in_first_x[5:1] == 5'd0) ?
	       32'd0 :
	       csr_mv_resp_to_core[31:0] ;
  assign x__h5754 =
	     (rx_in_first_x[11:7] == 5'd0 && !rx_in_first_x[1]) ?
	       32'd0 :
	       rx_in_first_x[43:12] ;
  assign x__h6059 =
	     (rx_in_first_x[72:71] == 2'd0) ?
	       jump_address__h3056 :
	       y_avValue_snd_fst__h6033 ;
  assign y_avValue_snd_fst__h6033 =
	     (rx_in_first_x[72:71] == 2'd1) ?
	       csr_take_trap :
	       csr_system_instruction[31:0] ;
  always@(rx_in_first_x or csr_take_trap)
  begin
    case (rx_in_first_x[70:65])
      6'd23, 6'd24: jump_address__h3056 = rx_in_first_x[32:1];
      default: jump_address__h3056 = csr_take_trap;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        rg_epoch <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_store_initiated <= `BSV_ASSIGNMENT_DELAY 1'd0;
      end
    else
      begin
        if (rg_epoch_EN) rg_epoch <= `BSV_ASSIGNMENT_DELAY rg_epoch_D_IN;
	if (rg_store_initiated_EN)
	  rg_store_initiated <= `BSV_ASSIGNMENT_DELAY rg_store_initiated_D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    rg_epoch = 1'h0;
    rg_store_initiated = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit)
	begin
	  TASK_testplusargs___d12 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit)
	begin
	  TASK_testplusargs___d13 = $test$plusargs("mstage5");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit)
	begin
	  TASK_testplusargs___d14 = $test$plusargs("l0");
	  #0;
	end
    TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32 =
	(TASK_testplusargs___d12 ||
	 TASK_testplusargs___d13 && TASK_testplusargs___d14) &&
	rx_in_first_x[72:71] == 2'd0;
    TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35 =
	(TASK_testplusargs___d12 ||
	 TASK_testplusargs___d13 && TASK_testplusargs___d14) &&
	rx_in_first_x[72:71] == 2'd1;
    TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d38 =
	(TASK_testplusargs___d12 ||
	 TASK_testplusargs___d13 && TASK_testplusargs___d14) &&
	rx_in_first_x[72:71] == 2'd2;
    TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d48 =
	(TASK_testplusargs___d12 ||
	 TASK_testplusargs___d13 && TASK_testplusargs___d14) &&
	rx_in_first_x[72:71] != 2'd0 &&
	rx_in_first_x[72:71] != 2'd1 &&
	rx_in_first_x[72:71] != 2'd2;
    TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d76 =
	(TASK_testplusargs___d12 ||
	 TASK_testplusargs___d13 && TASK_testplusargs___d14) &&
	rx_in_first_x[72:71] == 2'd2 &&
	rx_in_first_x[1];
    TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d79 =
	(TASK_testplusargs___d12 ||
	 TASK_testplusargs___d13 && TASK_testplusargs___d14) &&
	rx_in_first_x[72:71] == 2'd2 &&
	!rx_in_first_x[1];
    TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d81 =
	(TASK_testplusargs___d12 ||
	 TASK_testplusargs___d13 && TASK_testplusargs___d14) &&
	rx_in_first_x[72:71] != 2'd0 &&
	rx_in_first_x[72:71] != 2'd1;
    TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d85 =
	(TASK_testplusargs___d12 ||
	 TASK_testplusargs___d13 && TASK_testplusargs___d14) &&
	rx_in_first_x[72:71] != 2'd0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit)
	begin
	  v__h1757 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  (TASK_testplusargs___d12 ||
	   TASK_testplusargs___d13 && TASK_testplusargs___d14))
	$write("[%10d", v__h1757, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  (TASK_testplusargs___d12 ||
	   TASK_testplusargs___d13 && TASK_testplusargs___d14))
	$write("[%2d]STAGE5: PC: %h: inst: %h epoch:%b rg_epoch:%b commit: ",
	       hartid,
	       rx_inst_first_x[63:32],
	       rx_inst_first_x[31:0],
	       rx_in_first_x[0],
	       rg_epoch);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("tagged TRAP ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("tagged STORE ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d38)
	$write("tagged REG ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d48)
	$write("tagged SYSTEM ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d38)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d48)
	$write("CommitSystem { ", "rs1: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d38)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d48)
	$write("'h%h", rx_in_first_x[54:23]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d38)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d48)
	$write(", ", "lpc: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d38)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d48)
	$write("'h%h", rx_in_first_x[22:21]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d38)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d48)
	$write(", ", "csraddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d38)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d48)
	$write("'h%h", rx_in_first_x[20:9]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d38)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d48)
	$write(", ", "func3: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d38)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d48)
	$write("'h%h", rx_in_first_x[8:6]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d38)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d48)
	$write(", ", "rd: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d38)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d48)
	$write("'h%h", rx_in_first_x[5:1], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d38)
	$write("CommitRegular { ", "commitvalue: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d48)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d38)
	$write("'h%h", rx_in_first_x[43:12]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d48)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d38)
	$write(", ", "rd: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d48)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d38)
	$write("'h%h", rx_in_first_x[11:7]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d48)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d38)
	$write(", ", "fflags: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d48)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d38)
	$write("'h%h", rx_in_first_x[6:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d48)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d38)
	$write(", ", "rdtype: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d48)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d76)
	$write("FRF");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d79)
	$write("IRF");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d48)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d38)
	$write(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d48)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("CommitStore { ", "pc: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d81)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d35)
	$write("'h%h", rx_in_first_x[32:1], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d81)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("CommitTrap { ", "cause: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d85)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("'h%h", rx_in_first_x[70:65]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d85)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write(", ", "badaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d85)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("'h%h", rx_in_first_x[64:33]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d85)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write(", ", "pc: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d85)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d32)
	$write("'h%h", rx_in_first_x[32:1], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  TASK_testplusargs_2_OR_TASK_testplusargs_3_AND_ETC___d85)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  (TASK_testplusargs___d12 ||
	   TASK_testplusargs___d13 && TASK_testplusargs___d14))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	  rx_in_first_x[72:71] == 2'd0 &&
	  (rx_in_first_x[70:65] == 6'd23 || rx_in_first_x[70:65] == 6'd24))
	begin
	  TASK_testplusargs___d155 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	  rx_in_first_x[72:71] == 2'd0 &&
	  (rx_in_first_x[70:65] == 6'd23 || rx_in_first_x[70:65] == 6'd24))
	begin
	  TASK_testplusargs___d156 = $test$plusargs("mstage5");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	  rx_in_first_x[72:71] == 2'd0 &&
	  (rx_in_first_x[70:65] == 6'd23 || rx_in_first_x[70:65] == 6'd24))
	begin
	  TASK_testplusargs___d157 = $test$plusargs("l0");
	  #0;
	end
    IF_rx_w_data_whas__4_THEN_IF_rx_w_data_wget__5_ETC___d160 =
	(rx_in_first_x[70:65] == 6'd23 || rx_in_first_x[70:65] == 6'd24) &&
	(TASK_testplusargs___d155 ||
	 TASK_testplusargs___d156 && TASK_testplusargs___d157);
    rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d162 =
	rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	rx_in_first_x[72:71] == 2'd0 &&
	IF_rx_w_data_whas__4_THEN_IF_rx_w_data_wget__5_ETC___d160;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	  rx_in_first_x[72:71] == 2'd0 &&
	  (rx_in_first_x[70:65] == 6'd23 || rx_in_first_x[70:65] == 6'd24))
	begin
	  v__h2817 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d162)
	$write("[%10d", v__h2817, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d162)
	$write("[%2d]STAGE5: Rerun initiated", hartid);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d162)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	  rx_in_first_x[72:71] == 2'd0)
	begin
	  TASK_testplusargs___d173 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	  rx_in_first_x[72:71] == 2'd0)
	begin
	  TASK_testplusargs___d174 = $test$plusargs("mstage5");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	  rx_in_first_x[72:71] == 2'd0)
	begin
	  TASK_testplusargs___d175 = $test$plusargs("l0");
	  #0;
	end
    rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d178 =
	rx_in_first_x[72:71] == 2'd0 &&
	(TASK_testplusargs___d173 ||
	 TASK_testplusargs___d174 && TASK_testplusargs___d175);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	  rx_in_first_x[72:71] == 2'd0)
	begin
	  v__h3164 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	  rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d178)
	$write("[%10d", v__h3164, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	  rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d178)
	$write("[%2d]STAGE5: Received TRAP:%d NewPC:%h fl:%b",
	       hartid,
	       rx_in_first_x[70:65],
	       jump_address__h3056,
	       1'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	  rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d178)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	  rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d220)
	begin
	  TASK_testplusargs___d222 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	  rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d220)
	begin
	  TASK_testplusargs___d223 = $test$plusargs("mstage5");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	  rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d220)
	begin
	  TASK_testplusargs___d224 = $test$plusargs("l0");
	  #0;
	end
    NOT_wr_cache_ready_whas__5_16_OR_NOT_wr_cache__ETC___d227 =
	(!EN_ma_cache_ready || !ma_cache_ready_r) && !rg_store_initiated &&
	(TASK_testplusargs___d222 ||
	 TASK_testplusargs___d223 && TASK_testplusargs___d224);
    rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d229 =
	rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	rx_in_first_x[72:71] == 2'd1 &&
	NOT_wr_cache_ready_whas__5_16_OR_NOT_wr_cache__ETC___d227;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	  rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d220)
	begin
	  v__h3365 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d229)
	$write("[%10d", v__h3365, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d229)
	$write("[%2d]STAGE5: Store op Waiting for Cache Ready", hartid);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d229)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d233)
	begin
	  TASK_testplusargs___d234 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d233)
	begin
	  TASK_testplusargs___d235 = $test$plusargs("mstage5");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d233)
	begin
	  TASK_testplusargs___d236 = $test$plusargs("l0");
	  #0;
	end
    NOT_rg_store_initiated_8_00_AND_wr_store_is_ca_ETC___d239 =
	!rg_store_initiated && store_is_cached_c &&
	(TASK_testplusargs___d234 ||
	 TASK_testplusargs___d235 && TASK_testplusargs___d236);
    wr_cache_ready_whas__5_AND_wr_cache_ready_wget_ETC___d240 =
	(EN_ma_cache_ready && ma_cache_ready_r || rg_store_initiated) &&
	NOT_rg_store_initiated_8_00_AND_wr_store_is_ca_ETC___d239;
    rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d242 =
	rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	rx_in_first_x[72:71] == 2'd1 &&
	wr_cache_ready_whas__5_AND_wr_cache_ready_wget_ETC___d240;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d233)
	begin
	  v__h3563 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d242)
	$write("[%10d", v__h3563, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d242)
	$write("[%2d]STAGE5: Initiating Store request", hartid);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d242)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	  rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d253)
	begin
	  TASK_testplusargs___d255 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	  rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d253)
	begin
	  TASK_testplusargs___d256 = $test$plusargs("mstage5");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	  rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d253)
	begin
	  TASK_testplusargs___d257 = $test$plusargs("l0");
	  #0;
	end
    wr_store_response_whas__05_AND_wr_store_respon_ETC___d260 =
	EN_write_resp && write_resp_r[33] &&
	(TASK_testplusargs___d255 ||
	 TASK_testplusargs___d256 && TASK_testplusargs___d257);
    rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d263 =
	rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	rx_in_first_x[72:71] == 2'd1 &&
	rg_store_initiated &&
	wr_store_response_whas__05_AND_wr_store_respon_ETC___d260;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	  rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d253)
	begin
	  v__h4275 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d263)
	$write("[%10d", v__h4275, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d263)
	$write("[%2d]STAGE5: Store response Received: ", hartid);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d263)
	$write("<");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d263)
	$write("'h%h", write_resp_r[32]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d263)
	$write(",");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d263)
	$write("'h%h", write_resp_r[31:0], ">");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d263)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	  rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d269)
	begin
	  TASK_testplusargs___d271 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	  rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d269)
	begin
	  TASK_testplusargs___d272 = $test$plusargs("mstage5");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	  rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d269)
	begin
	  TASK_testplusargs___d273 = $test$plusargs("l0");
	  #0;
	end
    NOT_wr_store_response_whas__05_65_OR_NOT_wr_st_ETC___d276 =
	(!EN_write_resp || !write_resp_r[33]) &&
	(TASK_testplusargs___d271 ||
	 TASK_testplusargs___d272 && TASK_testplusargs___d273);
    rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d279 =
	rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	rx_in_first_x[72:71] == 2'd1 &&
	rg_store_initiated &&
	NOT_wr_store_response_whas__05_65_OR_NOT_wr_st_ETC___d276;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	  rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d269)
	begin
	  v__h4686 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d279)
	$write("[%10d", v__h4686, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d279)
	$write("[%2d]STAGE5: Waiting for Store response", hartid);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d279)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d284)
	begin
	  TASK_testplusargs___d285 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d284)
	begin
	  TASK_testplusargs___d286 = $test$plusargs("mstage5");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d284)
	begin
	  TASK_testplusargs___d287 = $test$plusargs("l0");
	  #0;
	end
    NOT_rg_store_initiated_8_00_AND_TASK_testplusa_ETC___d290 =
	!rg_store_initiated &&
	(TASK_testplusargs___d285 ||
	 TASK_testplusargs___d286 && TASK_testplusargs___d287);
    wr_cache_ready_whas__5_AND_wr_cache_ready_wget_ETC___d292 =
	(EN_ma_cache_ready && ma_cache_ready_r || rg_store_initiated) &&
	(rg_store_initiated || !store_is_cached_c) &&
	NOT_rg_store_initiated_8_00_AND_TASK_testplusa_ETC___d290;
    rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d294 =
	rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	rx_in_first_x[72:71] == 2'd1 &&
	wr_cache_ready_whas__5_AND_wr_cache_ready_wget_ETC___d292;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d284)
	begin
	  v__h4038 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d294)
	$write("[%10d", v__h4038, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d294)
	$write("[%2d]STAGE5: Initiating NC Store request", hartid);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d294)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	  rx_in_first_x[72:71] == 2'd2)
	begin
	  TASK_testplusargs___d299 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	  rx_in_first_x[72:71] == 2'd2)
	begin
	  TASK_testplusargs___d300 = $test$plusargs("mstage5");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	  rx_in_first_x[72:71] == 2'd2)
	begin
	  TASK_testplusargs___d301 = $test$plusargs("l0");
	  #0;
	end
    rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d304 =
	rx_in_first_x[72:71] == 2'd2 &&
	(TASK_testplusargs___d299 ||
	 TASK_testplusargs___d300 && TASK_testplusargs___d301);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	  rx_in_first_x[72:71] == 2'd2)
	begin
	  v__h5371 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	  rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d304)
	$write("[%10d", v__h5371, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	  rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d304)
	$write("[%2d]STAGE5: Regular commit", hartid);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	  rx_w_data_whas__4_AND_rx_w_data_wget__5_BITS_7_ETC___d304)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  !rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94)
	begin
	  TASK_testplusargs___d322 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  !rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94)
	begin
	  TASK_testplusargs___d323 = $test$plusargs("mstage5");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  !rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94)
	begin
	  TASK_testplusargs___d324 = $test$plusargs("l0");
	  #0;
	end
    NOT_rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_ETC___d327 =
	!rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94 &&
	(TASK_testplusargs___d322 ||
	 TASK_testplusargs___d323 && TASK_testplusargs___d324);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  !rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_w_d_ETC___d94)
	begin
	  v__h5928 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  NOT_rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_ETC___d327)
	$write("[%10d", v__h5928, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  NOT_rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_ETC___d327)
	$write("[%2d]STAGE5: Dropping instruction", hartid);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_instruction_commit &&
	  NOT_rg_epoch_8_EQ_IF_rx_w_data_whas__4_THEN_rx_ETC___d327)
	$write("\n");
  end
  // synopsys translate_on
endmodule  // mkstage5

